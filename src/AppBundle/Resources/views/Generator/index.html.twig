{% extends view('layout') %}

{% block before_styles %}
    {% include view('helper.plugins_css') %}
{% endblock %}

{% block body %}

    <style>
        #generator_container,
        #generator_container li{
            margin: 0;
            padding: 0;
            list-style: none;
        }
    </style>

    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        <div class="row">

                            <div id="generator_form" class="col-md-12 flow-h">
                            </div>

                            <div class="hr-line-dashed col-md-12"></div>

                            <div id="generator_orders" class="col-md-12 flow-h">
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block scripts %}

    {% include view('helper.request') %}
    {% include view('helper.plugins_js') %}
    {% include view('helper.numbers') %}

    <script>

        var Project = {
            id: null,
            power: 0
        };

        var Order = {
            id: null
        };

        var OrderManager = {
            currentUrl: null,
            /*getElements: function(){
                if(Order.id){
                    Request.send({
                        url: '{{ path('generator_orders_elements', {id:'_id_'}) }}'.replace(/_id_/g, Order.id),
                        callback: function(xhr){
                            $('#order_elements').html(xhr.responseText);
                        }
                    });
                }
            },*/
            getOrders: function(url){
                if(url)  OrderManager.currentUrl = url;
                Request.send({
                    url: OrderManager.currentUrl,
                    callback: function(xhr){
                        $('#generator_orders').html(xhr.responseText);
                    }
                });
            },
            register: function(button){
                button.on('click', function(){
                    if(Project.id){

                        swal({title: 'Confirma a geração do orçamento?',
                            text: 'Após este processo o projeto atual será removido!',
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: '{{ 'Confirmar'|trans }}',
                            cancelButtonText: '{{ 'Cancelar'|trans }}',
                            closeOnConfirm: false
                        }, function() {

                            sweetAlert({
                                title: "Gerando orçamento...",
                                text:  "Aguarde!",
                                type: "info",
                                showConfirmButton: false
                            });

                            Request.send({
                                url: '{{ path('generator_orders_create',{id:'_id_'}) }}'.replace(/_id_/g, Project.id),
                                method: 'post',
                                callback: function (xhr) {
                                    OrderManager.onCreateOrder();
                                    swal.close();
                                }
                            });
                        });
                    }
                });
            },
            onCreateOrder: function(){
                OrderManager.getOrders('{{ path('generator_orders') }}');
                ProjectGenerator.getCreateForm();
            },
            onSaveElement: function(){

            }
        };

        var ProjectGenerator = {
            lastUrl: null,
            formProject: function(url){
                if(url) ProjectGenerator.lastUrl = url;
                Request.send({
                    url: ProjectGenerator.lastUrl,
                    callback: function(xhr){
                        $('#generator_form').html(xhr.responseText);
                    }
                });
            },
            register: function(form) {
            },
            getCreateForm: function(){
                ProjectGenerator.formProject('{{ path('order_generator_project') }}');
            },
            init: function(){
                ProjectGenerator.getCreateForm();
                OrderManager.getOrders('{{ path('generator_orders') }}');
            }
        };

        ProjectGenerator.init();

    </script>

{% endblock %}