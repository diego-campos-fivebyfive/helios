{% extends view('layout') %}

{% block styles %}

    <style>
        .editor_block {
            padding: 0;
            height: auto;
            border: 1px solid transparent;
        }

        .editor_block:hover {
            border: 1px dotted #444;
        }

        #sidebar-tags{
            background: #777;
            z-index: 9999;
            float: right;
            top: 150px;
            right: 0;
            position: fixed;
            width: 20%;
            height:  60%;
            overflow-y: scroll;
            overflow-x: hidden;
        }
        #block_tags ul, #block_tags ul li{
            margin: 0;
            padding: 0;
            list-style: none;
        }
        #block_tags .h-card{
            cursor: pointer;
            background: #f5f5f5;
            padding: 8px 5px;
            font-size: 13px;
            font-variant: small-caps;
            border-bottom: 1px dotted #444;
        }
        #block_tags .h-card:hover{
            background: #e5e5e5;
        }
        #block_tags .title_tags{
            background: #00a7d0;
            padding: 10px;
            color: #fff;
        }
        #editor_document{
            padding-left: 0;
            width: 21cm;
        }
        .editor_page{
            height: 27.94cm;
            padding-right: 2cm;
            overflow: hidden;
            background: #fff;
            box-shadow: 0 0 20px #444;
        }
        .editor_page{
            margin-top: 1cm;
        }
        .editor_section.row{
            margin: 0 !important;
        }
        .editor_section .btn-remove-section{
            display: none;
        }
        .editor_section:hover .btn-remove-section{
            display: inline;
        }
        .editor_page_toolbar{
            height: 2cm;
        }
        .editor_vertical_toolbar{
            width: 2cm;
            float: left;
            height: 100%;
        }
        .editor_page_content{
            height: 23.94cm;
            width: 19cm;
            float: left;
            overflow: hidden;
        }
        .editor_section_blocks{
            width: 17cm;
            float: left;
        }
    </style>


{% endblock %}

{% block body %}


    <div id="sidebar-tags">
        <div class="col-md-12" id="block_tags">
            <ul>
                <li class="title_tags">
                    <h2> My Tags </h2>
                </li>
                {% for i in 1..15 %}
                    <li>
                        <div class="h-card" data-tag="">
                            <i class="fa fa-info"></i> Menu Item {{ i }}
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>
    </div>

<div class="wrapper wrapper-content animated fadeInRight">

    {% include view('project.navbar') %}

    <div class="row" id="proposal_editor" style="background: #e7e7e7">
        <div style="background: #e7e7e7" class="col-md-9">

            <div class="row">
                <div class="modal fade" id="section_options" role="dialog">
                    <div class="modal-dialog ">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Modelos de Sessão</h4>
                            </div>
                            <div class="modal-body">
                                <h2 class="text-center">Escolha uma sessão</h2>
                                <div class="col-m-12 text-center">
                                    <button class="btn btn-info" data-cols="12" data-dismiss="modal"><img src="{{ asset('assets/proposal2/images/l1.png') }}"></button>
                                    <button class="btn btn-info" data-cols="6-6" data-dismiss="modal"><img src="{{ asset('assets/proposal2/images/c2.png') }}"></button>
                                    <button class="btn btn-info" data-cols="8-4" data-dismiss="modal"><img src="{{ asset('assets/proposal2/images/c1c2p.png') }}"></button>
                                    <button class="btn btn-info" data-cols="4-8" data-dismiss="modal"><img src="{{ asset('assets/proposal2/images/c1pc2.png') }}"></button>
                                    <button class="btn btn-info" data-cols="4-4-4" data-dismiss="modal"><img src="{{ asset('assets/proposal2/images/c3.png') }}"></button>
                                    <button class="btn btn-info" data-cols="12-6-6" data-dismiss="modal"><img src="{{ asset('assets/proposal2/images/l1c2.png') }}"></button>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div id="editor_document" class="col-md-8 col-md-offset-2">
                </div>
            </div>

            <div class="row" style="margin-top: 10px;">
                <div class="col-md-7 col-md-offset-3">
                    <div class="btn-group btn-group-sm btn-group-justified">
                        <a class="btn btn-primary" id="editor_add_page">
                            <i class="fa fa-plus"></i> Nova Página
                        </a>
                    </div>
                </div>
            </div>

            <div class="row">

            <button id="btn_save">
                Salvar
            </button>

            <div class="row hide">
                <div class="col-md-7" id="chart_generation_container">
                </div>
                <div class="col-md-7" id="chart_financial_container">
                </div>
            </div>

            <div class="row">
                <div class="contacts">
                    <h3>List of Droppable Contacts</h3>
                    <ul id="contactList">
                        <li>
                            <div class="h-card" data-tag="power" draggable="true">
                                Potência
                            </div>
                        </li>
                        <li>
                            <div class="h-card" data-tag="customer_name" draggable="true">
                                Nome do Cliente
                            </div>
                        </li>
                        <li>
                            <div class="h-card" data-tag="chart_generation" draggable="true">
                                Gráfico de Geração
                            </div>
                        </li>
                        <li>
                            <div class="h-card" data-tag="chart_financial" draggable="true">
                                Gráfico de Análise Financeira
                            </div>
                        </li>
                        <li>
                            <div id="tagGenerationChart" class="list-group-item" data-info="generationChart" draggable="true">
                                Gráfico da Geração
                                <input type="hidden" id="colorChartGeneration" onchange="changeColorGeneration(this.value)" value="00A7EC">
                                <button type="button" class="btn border jscolor {valueElement: 'colorChartGeneration'}">Escolher cor</button>
                            </div>
                        </li>
                        <li>
                            <div id="tagAccumulatedCashChart" class="list-group-item" data-info="accumulatedCashChart" draggable="true">
                                Gráfico do caixa acumulado
                                <input type="hidden" id="colorChartFinancial" onchange="changeColorFinancial(this.value)" value="00A7EC">
                                <button type="button" class="btn border jscolor {valueElement: 'colorChartFinancial'}">Escolher cor</button>
                            </div>
                        </li>
                    </ul>
                </div>

            </div>

            <div class="row" style="margin-bottom: 15rem;">

                <div class="editor_block col-md-6" id="editor_live_0" contenteditable="true">
                </div>

                <div class="editor_block col-md-12" id="editor_live_1" contenteditable="true">
                </div>

            </div>

            </div>
        </div>

    </div>
</div>

{% endblock %}


{% block scripts %}

    {% include view('helper.plugins_js') %}

    <script src="{{ asset('assets/app-charts.js') }}"></script>
    <script src="{{ asset('assets/proposal2/ckeditor/ckeditor.js') }}"></script>
    <script src="{{ asset('assets/proposal2/jscolor.js') }}"></script>

    {#
    <script src="{{ asset('assets/proposal2/script.js') }}"></script>
    <script src="{{ asset('assets/proposal2/dragable.js') }}"></script>

    #}

    <script>
        UPLOADCARE_PUBLIC_KEY = '9490325b6fcc3e8d094d';
    </script>

    <script>

        'use strict';

        {% if true %}

        var Editor = {
            document: $('#editor_document'),
            sectionOptions: $('#section_options'),
            button:{
                addPage: $('#editor_add_page')
            },
            defaults:{
                blockContent: '<p style="text-align:center"><strong><span style="color:#000000">Lorem Ipsum</span></strong><br></p><p style="text-align:justify"><span style="color:#000000">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras euismod luctus tortor vel iaculis. Ut interdum eleifend velit nec consequat. Nullam sagittis odio metus, vitae dictum tellus pulvinar quis. Morbi sit amet enim vel ante aliquet eleifend. Nam purus metus, varius fermentum pulvinar aliquet, fermentum vitae augue.</span><br></p>'
            },
            currentPage: null,
            currentPageSection: null,
            configureSection: function(section){

                $.each(section.find('.editor_block'), function(i, editor){
                    var id = $(editor).attr('id');
                    CKEDITOR.inline(id, {
                        extraPlugins: 'hcard,sourcedialog,justify'
                    });
                });

                section.find('.btn-remove-section').on('click', function(){
                    swal({
                        title: 'Confirma exclusão?',
                        text: 'O conteúdo desta seção será perdido',
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: '{{ 'Confirmar'|trans }}',
                        cancelButtonText: '{{ 'Cancelar'|trans }}'
                    }, function() {
                        section.remove();
                    });
                });
            },
            configurePage: function(page){

                page.find('[data-action]').on('click', function(){
                    var action = $(this).data('action');
                    Editor.currentPage = page;
                    switch (action){
                        case 'add-section':
                            Editor.currentPage = page;
                            break;
                        case 'delete':
                            swal({
                                title: 'Confirma exclusão da página?',
                                text: 'O conteúdo será perdido',
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonColor: "#DD6B55",
                                confirmButtonText: '{{ 'Confirmar'|trans }}',
                                cancelButtonText: '{{ 'Cancelar'|trans }}'
                            }, function() {
                                page.remove();
                            });
                            break;
                        case 'move-up':
                            var before = page.prev();
                            if(before.length){
                                page.insertBefore(before);
                            }
                            break;
                        case 'move-down':
                            var after = page.next();
                            if(after.length) {
                                page.insertAfter(after);
                            }
                            break;
                    }
                });


            },
            loadSections: function(){

                Editor.sectionOptions.find('button[data-cols]').on('click', function(){

                    var randomId = 's_'+Math.random().toString(36).substring(7);

                    var cols = $(this).data('cols').toString().split('-');
                    var blocks = '';
                    $.each(cols, function(i, col){
                        var editorId = randomId+'_column'+i;
                        blocks += '<div class="editor_block col-md-'+col+'" id="'+editorId+'" contenteditable="true">'+Editor.defaults.blockContent+'</div>';
                    });

                    var id = randomId;
                    var button = '<button class="btn btn-xs btn-danger btn-block btn-remove-section">Excluir</button>';
                    var section = $('<div id="'+id+'" class="editor_section row"><div class="editor_vertical_toolbar">&nbsp;'+button+'</div> <div class="editor_section_blocks"> '+blocks+' </div></div>');

                    Editor.currentPage.find('.editor_page_content').append(section);
                    Editor.configureSection(section);
                });

            },
            addPage: function(){
                var page = $('<div class="editor_page"> <div class="row editor_page_toolbar"> <div class="col-md-12"> <div class="btn-group btn-group-sm"> <a class="btn btn-primary" data-action="add-section" data-toggle="modal" data-target="#section_options"><i class="fa fa-plus"></i> Nova Seção </a> <a class="btn btn-danger" data-action="delete"><i class="fa fa-trash"></i> Excluir Página </a> <a class="btn btn-success" data-action="move-up"><i class="fa fa-chevron-up"></i></a> <a class="btn btn-success" data-action="move-down"><i class="fa fa-chevron-down"></i></a> </div></div></div><div class="editor_page_content"></div></div>');
                Editor.document.append(page);
                Editor.configurePage(page);
            },
            init: function(){

                Editor.loadSections();

                Editor.button.addPage.on('click', function(){
                    Editor.addPage();
                });
            }
        };

        Editor.init();

        var Proposal = {
            tags: {
                power: {
                    value: '20 kWp',
                    tag: 'power',
                    handle: 'static'
                },
                customer_name: {
                    value: 'Shunda Abdala',
                    tag: 'customer_name',
                    handle: 'static'
                },
                chart_generation: {
                    data: {{ project.monthlyProduction|json_encode|raw }},
                    value: null,
                    tag: 'chart_generation',
                    handle: 'image'
                },
                chart_financial: {
                    data: {{ project.accumulatedCash|json_encode|raw }},
                    value: null,
                    tag: 'chart_financial',
                    handle: 'image'
                }
            },
            events: {
                lastTag: null
            }
        };

        function chartGeneration(config) {

            var chartContainer = $('#chart_generation_container');
            chartContainer.html('<canvas id="chart_generation" width="700" height="500"></canvas>');

            var clear = function(element){
                var canvas = AppChart.getCanvas(element);
                if(canvas) {
                    var context = canvas.getContext('2d');
                    context.clearRect(0, 0, canvas.width, canvas.height);
                }
            };

            var data = Proposal.tags.chart_generation.data;

            var settings = $.extend({}, {
                fillColor: 'rgba(242,160,25,0.5)',
                strokeColor: 'rgba(242,160,25,0)',
                pointColor: 'rgba(242,160,25)',
                element: 'chart_generation',
                data: data,
                callback: function (chart) {
                    var dataUrl = AppChart.getDataUrl(settings.element);
                    Proposal.tags.chart_generation.value = '<img src="'+ dataUrl +'"/>';
                }
            }, config);

            clear(settings.element);
            AppChart.projectChart(settings);

        }chartGeneration();


        function chartFinancial(config) {

            var chartContainer = $('#chart_financial_container');
            chartContainer.html('<canvas id="chart_financial" width="700" height="500"></canvas>');

            var clear = function(element){
                var canvas = AppChart.getCanvas(element);
                if(canvas) {
                    var context = canvas.getContext('2d');
                    context.clearRect(0, 0, canvas.width, canvas.height);
                }
            };

            var data = Proposal.tags.chart_financial.data;

            var settings = $.extend({}, {
                fillColor: "rgba(242,160,25,0.5)",
                strokeColor: "rgba(242,160,25, 0)",
                pointColor: "rgba(242,160,25, 0)",
                pointStrokeColor: "rgba(242,160,25, 0)",
                data: data,
                title: false,
                opacity: .5,
                element: 'chart_financial',
                callback: function(chart){
                    var dataUrl = AppChart.getDataUrl(settings.element);
                    Proposal.tags.chart_financial.value = '<img src="'+ dataUrl +'"/>';
                }
            }, config);

            clear(settings.element);
            AppChart.financialChart(settings);

        }chartFinancial();

        /**
         * @param color
         */
        function changeColorGeneration(color) {
            chartGeneration({
                fillColor: '#'+color
            });
        }

        /**
         * @param color
         */
        function changeColorFinancial(color){
            chartFinancial({
                fillColor: '#'+color
            });
        }

        CKEDITOR.plugins.add('hcard', {
            requires: 'widget',
            init: function (editor) {
                editor.widgets.add('hcard', {
                    allowedContent: 'span(!h-card); a[href](!u-email,!p-name); span(!p-tel)',
                    requiredContent: 'span(h-card)',
                    pathName: 'hcard',
                    upcast: function (el) {
                        return el.name == 'span' && el.hasClass('h-card');
                    }
                });

                // This feature does not have a button, so it needs to be registered manually.
                editor.addFeature(editor.widgets.registered.hcard);

                // Handle dropping a contact by transforming the contact object into HTML.
                // Note: All pasted and dropped content is handled in one event - editor#paste.
                editor.on('paste', function (evt) {

                    var source = evt.data.dataTransfer.getData('source');

                    /*var contact = evt.data.dataTransfer.getData( 'contact' );*/
                    if (!source) return;

                    if ('static' == source.handle) {
                        evt.data.dataValue = '<span class="h-card"><!--' + source.tag + '-->' + source.value + '<!--' + source.tag + '--></span>';
                    } else {

                        //var randomId = source.tag + parseInt(Math.random() * 1000);

                        evt.data.dataValue = source.value;

                        //console.log(source.value.replace('__attr__', 'id="'+randomId+'"'));
                        //Proposal.events.lastImageId = randomId;
                        //evt.data.dataValue = '<canvas id="chart_generation_in" width="700" height="500"></canvas>';
                    }

                    Proposal.events.lastTag = source.tag;

                });
            }
        });


        CKEDITOR.on('instanceReady', function () {
            // When an item in the contact list is dragged, copy its data into the drag and drop data transfer.
            // This data is later read by the editor#paste listener in the hcard plugin defined above.
            CKEDITOR.document.getById('contactList').on('dragstart', function (evt) {
                // The target may be some element inside the draggable div (e.g. the image), so get the div.h-card.
                var target = evt.data.getTarget().getAscendant('div', true);

                // Initialization of the CKEditor data transfer facade is a necessary step to extend and unify native
                // browser capabilities. For instance, Internet Explorer does not support any other data type than 'text' and 'URL'.
                // Note: evt is an instance of CKEDITOR.dom.event, not a native event.
                CKEDITOR.plugins.clipboard.initDragDataTransfer(evt);

                var dataTransfer = evt.data.dataTransfer;

                // Pass an object with contact details. Based on it, the editor#paste listener in the hcard plugin
                // will create the HTML code to be inserted into the editor. You could set 'text/html' here as well, but:
                // * It is a more elegant and logical solution that this logic is kept in the hcard plugin.
                // * You do not know now where the content will be dropped and the HTML to be inserted
                // might vary depending on the drop target.

                var tag = target.data('tag');

                dataTransfer.setData('source', Proposal.tags[tag]);

                //console.log(Proposal.tags[tag].value);

                // You need to set some normal data types to backup values for two reasons:
                // * In some browsers this is necessary to enable drag and drop into text in the editor.
                // * The content may be dropped in another place than the editor.
                dataTransfer.setData('text/html', target.getText());

                // You can still access and use the native dataTransfer - e.g. to set the drag image.
                // Note: IEs do not support this method... :(.

                /*if ( dataTransfer.$.setDragImage) {
                 dataTransfer.$.setDragImage(target.findOne( 'img' ).$, 0, 0 );
                 }*/
            });
        });

        $(document).on('dragend', function(event){

            if ('chart_generation' == Proposal.events.lastTag) {
                var container = $(event.currentTarget.activeElement)[0];
                var image = $(container).find('[data-widget="image"]:not(.initialized)');
                image.attr('width', (container.clientWidth * .95)).addClass('initialized');
            }

            if ('chart_financial' == Proposal.events.lastTag) {
                var container = $(event.currentTarget.activeElement)[0];
                var image = $(container).find('[data-widget="image"]:not(.initialized)');
                image.attr('width', (container.clientWidth * .95)).addClass('initialized');
            }
        });

        {% endif %}

    </script>

    <script>

        $('#btn_save').on('click', function () {
            $.ajax({
                url: '{{ path('proposal_save',{id:project.id}) }}',
                data: {content: $('#editor_live_0').html()},
                success: function (xhr) {
                    console.log(xhr.status);
                }
            });
        });

    </script>

{% endblock %}
