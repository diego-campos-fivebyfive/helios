<style>
    label#source_label{
        text-align: center;
        display: block;
    }
    .middle-block{
        float: left;
        width: 50%;
    }
</style>

<table class="table">
    <thead>
    <tr>
        <td colspan="3">

            {% if form is defined %}

            {{ form_start(form,{attr:{id:'form_configure', action: path('project_components',{id:project.id })}}) }}

            <div class="row">
                <div class="form-group">
                    <div class="col-md-4">
                        <div class="row">
                            {{ form_label(form.power, 'Potência',{label_attr:{id:'source_label'}}) }}
                        </div>
                        <div class="row">
                            <div class="middle-block">
                                {{ form_widget(form.source,{attr:{class:'form-control'}}) }}
                            </div>
                            <div class="middle-block">
                                {{ form_widget(form.power,{attr:{class:'form-control'}}) }}
                                {{ form_widget(form.consumption,{attr:{class:'form-control'}}) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        {{ form_label(form.module, 'Módulo') }}
                        {{ form_widget(form.module,{attr:{class:'form-control'}}) }}
                    </div>
                    <div class="col-md-4">
                        {{ form_label(form.inverter_maker, 'Fabricante do Inversor') }}
                        {{ form_widget(form.inverter_maker,{attr:{class:'form-control'}}) }}
                    </div>
                </div>
            </div>

            <div class="row" style="margin-top: 1rem;">
                <div class="form-group">
                    <div class="col-md-3">
                        {{ form_label(form.string_box_maker, 'Fabricante do String Box') }}
                        {{ form_widget(form.string_box_maker,{attr:{class:'form-control'}}) }}
                    </div>
                    <div class="col-md-3">
                        {{ form_label(form.roof_type, 'Tipo de Telhado') }}
                        {{ form_widget(form.roof_type,{attr:{class:'form-control'}}) }}
                    </div>
                    <div class="col-md-3">
                        {{ form_label(form.structure_maker, 'Fabricante da Estrutura') }}
                        {{ form_widget(form.structure_maker,{attr:{class:'form-control'}}) }}
                    </div>

                    <div class="hide">
                        {{ form_rest(form) }}
                    </div>

                    <div class="col-md-3">
                        <label> &nbsp; </label>
                        <button type="submit" class="btn btn-success btn-block ladda-button" data-style="zoom-in">
                            <i class="fa fa-check"></i> Recalcular
                        </button>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="hr-line-dashed"></div>
            </div>

            {{ form_end(form) }}

            {% endif %}

        </td>
    </tr>
    <tr>
        <th> Código</th>
        <th> Descrição</th>
        <th> Quantidade</th>
    </tr>
    </thead>
    <tbody>

    {# MODULES #}
    {% for projectModule in project.projectModules %}
        <tr>
            <td> {{ projectModule.module.id }} </td>
            <td>
                <a data-toggle="modal" data-target="#modal_component" data-url="{{ path('component_show', {type:'module', id:projectModule.module.id}) }}">
                    {{ projectModule.module.model }}
                </a>
            </td>
            <td> {{ projectModule.quantity }} </td>
        </tr>
    {% endfor %}

    {# INVERTERS #}
    {% for id, group in project.groupInverters %}
        <tr>
            <td> {{ id }} </td>
            <td>
                <a data-toggle="modal" data-target="#modal_component" data-url="{{ path('component_show', {type:'inverter', id:group.inverter.id}) }}">
                    {{ group.inverter.model }}
                </a>
            </td>
            <td> {{ group.quantity }} </td>
        </tr>
    {% endfor %}

    {# STRING_BOXES #}
    {% for projectStringBox in project.projectStringBoxes %}
        <tr>
            <td> {{ projectStringBox.stringBox.code }} </td>
            <td>
                <a data-toggle="modal" data-target="#modal_component" data-url="{{ path('stringbox_show', {id:projectStringBox.stringBox.id}) }}">
                    {{ projectStringBox.stringBox.description }}
                </a>
            </td>
            <td> {{ projectStringBox.quantity }} </td>
        </tr>
    {% endfor %}

    {# STRUCTURES #}
    {% for projectStructure in project.projectStructures %}
        <tr>
            <td> {{ projectStructure.structure.code }} </td>
            <td>
                <a data-toggle="modal" data-target="#modal_component" data-url="{{ path('structure_show', {id:projectStructure.structure.id}) }}">
                    {{ projectStructure.structure.description }}
                </a>
            </td>
            <td> {{ projectStructure.quantity }} </td>
        </tr>
    {% endfor %}


    {# VARIETIES #}
    {% for projectVariety in project.projectVarieties %}
        <tr>
            <td> {{ projectVariety.variety.code }} </td>
            <td> {{ projectVariety.variety.description }} </td>
            <td> {{ projectVariety.quantity }} </td>
        </tr>
    {% endfor %}

    </tbody>
</table>

<script>
    var form_config = $('#form_configure');
    var button_config = form_config.find('button');
    var source_option = $('input[name="source_option"]');
    var source_label = $('#source_label');
    var generator_source = $('#generator_source');
    var generator_power = $('#generator_power');
    var generator_consumption = $('#generator_consumption');
    var generate_makers = $('#generator_inverter_maker');

    var sources = {
        power: {
            label: 'Informe a Potência (kWp)',
            current: {{ project.defaults.power }}
        },
        consumption: {
            label: 'Informe o Consumo (kWh)',
            current: {{ project.defaults.consumption }}
        }
    };

    function get_available_makers(callback) {
        Request.send({
            url: '{{ path('detect_makers') }}',
            method: 'post',
            data: form_config.serialize(),
            callback: function(xhr) {
                var response = xhr.responseJSON;
                var makers = response.makers;
                callback(makers);
            }
        });
    }

    button_config.ladda();
    form_config.on('submit', function(event){
        event.preventDefault();
        button_config.ladda('start');
        get_available_makers(function(makers){
            var maker_id = parseInt(generate_makers.val());
            if (makers.indexOf(maker_id) >= 0) {
                ProjectManager.submit(form_config, function(xhr){
                    ProjectManager.project = xhr.responseJSON.project;
                    ProjectManager.onSaveProject();
                    button_config.ladda('stop');
                });
            } else {
                button_config.ladda('stop');
                swal('Ooops', 'O inversor selecionado não é compatível com esta potência!', 'error');
            }
        });
    });

    function check_source_option() {
        var option = generator_source.val();
        source_label.html(sources[option].label);
        if('power' == option){
            generator_power.show();
            generator_consumption.hide();
        }else{
            generator_consumption.show();
            generator_power.hide();
        }
    }check_source_option();

    Numbers.mask(generator_power);
    Numbers.mask(generator_consumption);

    var last_power = sources.power.current;
    var last_consumption = sources.consumption.current;

    function detect_makers(){
        get_available_makers(function (makers) {
            if (!makers.length) {
                generator_power.val(last_power);
                generator_consumption.val(last_consumption);
                swal('Ooops', 'Não há inversores compatíveis!', 'error');
            } else {
                generate_makers.show();
                $.each(generate_makers.find('option'), function (i, option) {
                    var id = parseInt($(option).val());
                    if (makers.indexOf(id) >= 0) {
                        $(option).removeAttr('disabled');
                    } else {
                        $(option).attr('disabled', 'disabled');
                    }
                });
                if (1 == makers.length) {
                    generate_makers.find('option[value="' + makers[0] + '"]').attr('selected', 'selected');
                }
            }
        });
    }

    generator_power.on('change', function(){
        detect_makers();
    }).on('focus', function(){
        last_power = $(this).val();
    });

    generator_consumption.on('change', function(){
        detect_makers();
    }).on('focus', function(){
        last_consumption = $(this).val();
    });

    generator_source.on('change', function(){
        check_source_option();
    });

    $('#project_latitude').on('change', function(){
        $('#generator_latitude').val($(this).val());
    });

    $('#project_longitude').on('change', function() {
        $('#generator_longitude').val($(this).val());
    });
</script>