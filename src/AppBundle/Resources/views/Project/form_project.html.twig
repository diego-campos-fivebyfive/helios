{% extends view('layout') %}

{% block before_styles %}
    {% include view('helper.plugins_css') %}
{% endblock %}

{% block styles %}

    <style>
        .hipper-label {
            text-transform: uppercase;
        }

        .mega-icon {
            font-size: 5rem;
        }

        .medium-icon {
            font-size: 4rem;
            margin-top: 3rem;
            color: #888;
        }

        table.area-editing {
            background: #f6f6f6;
        }

        #map {
            width: 100%;
            height: 300px;
        }
        #form-estimate-power .input-group-addon{
            font-size: 12px;
            width: 175px;
        }
        #project_address{
            margin-top: 10px;
            width: 90%;
            border-color: #1ab394 !important;
        }
        .ibox-content{

        }
    </style>

    <style type="text/css">
        .ruler-row {
            margin-top: 1rem;
        }
        .ui-slider-horizontal {
            height: 0 !important;
            border: 0 !important;
        }
        .ui-slider-tip {
            visibility: visible !important;
            opacity: 1 !important;
        }
        .ruler-bar.progress {
            margin-bottom: 0;
        }
        .ui-slider .ui-slider-handle {
            width: .5em !important;
            height: 2em !important;
            top: -1.5em !important;
        }
        .ui-slider-pips .ui-slider-pip {
            top: 10px !important;
        }
        .progress-bar-success {
            background-color: #5cb85c;
        }
        .operation-info.btn-success,
        .operation-info.btn-success:active,
        .operation-info.btn-success:focus,
        .operation-info.btn-success:hover{
            background: #5cb85c;
            border-color: #5cb85c;
        }
    </style>

{% endblock %}

{% block body %}

    {# MODALS AREA - START #}

    <div class="modal inmodal fade" id="modal_estimate_power" tabindex="-1" role="dialog"  aria-hidden="true">
        <div class="modal-dialog" style="width: 35rem;">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <h4 class="text-center"> Estimar Potência </h4>
                        <div class="col-md-12">
                            <form id="form-estimate-power" action="" method="post">
                                <div class="form-group">
                                    <div class="input-group m-b">
                                        <span class="input-group-addon text-right">
                                             Média de Consumo (kWh)
                                        </span>
                                        <input id="consumption" placeholder="" class="form-control" type="text">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="input-group m-b">
                                        <span class="input-group-addon text-right">
                                            Potência Estimada (kWp)
                                        </span>
                                        <input id="estimate_power" readonly="readonly" placeholder="" class="form-control" type="text">
                                    </div>
                                </div>
                                <div class="form-group text-center" id="form-estimate-error">
                                </div>
                                <div class="form-group">
                                    <button class="btn btn-sm btn-info btn-block ladda-button" data-style="zoom-in">
                                        <i class="fa fa-chevron-right"></i> Estimar
                                    </button>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-12">
                            O resultado gerado nesta estimativa serve apenas como auxílio na escolha de um KIT e não influencia nos cálculos.
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white btn-sm" data-dismiss="modal">{{ 'Close'|trans }}</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal inmodal" id="modal_info" tabindex="-1" role="dialog"  aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content animated fadeIn">
                <div class="modal-body">
                    <div class="sk-spinner sk-spinner-double-bounce">
                        <div class="sk-double-bounce1"></div>
                        <div class="sk-double-bounce2"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white btn-sm" data-dismiss="modal">
                        {{ 'Close'|trans }}
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal inmodal fade" id="modal_operation_info" tabindex="-1" role="dialog"  aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12" id="area_operation_inner">
                            <div class="sk-spinner sk-spinner-circle">
                                {% for i in 1..12 %}
                                    <div class="sk-circle{{ i }} sk-circle"></div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white btn-sm" data-dismiss="modal">{{ 'Close'|trans }}</button>
                </div>
            </div>
        </div>
    </div>


    {# MODALS AREA - END #}

    <div class="wrapper wrapper-content animated fadeInRight">

        {% include view('project.breadcrumbs') %}

        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">

                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="hipper-label"> 1. Dados Iniciais </h3>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="panel panel-info">
                                    <div class="panel-heading">
                                        Informações Principais
                                    </div>

                                    <div class="panel-body">

                                        {{ form_start(form, {attr:{id:'form_project', class:'form-horizontal'}}) }}

                                        <div class="form-group">
                                            <label class="col-sm-1 control-label">Contato</label>
                                            <div class="col-sm-5">
                                                {{ form_widget(form.customer,{'attr':{'class':'form-control', 'data-placeholder':'Selecionar contato'}}) }}
                                            </div>
                                            <label class="col-sm-2 control-label">Etapa de Venda</label>
                                            <div class="col-sm-4">
                                                {{ form_widget(form.stage,{'attr':{'class':'form-control'}}) }}
                                            </div>
                                        </div>

                                        <div class="hr-line-dashed"></div>

                                        <div class="form-group">
                                            <div class="col-lg-12 text-center">
                                                <label> Endereço </label>
                                            </div>

                                            <div class="col-lg-12">
                                                {{ form_widget(form.address,{'attr':{'class':'form-control','placeholder':'Search Address'}}) }}
                                                <div id="map"></div>
                                            </div>
                                        </div>

                                        <div class="hr-line-dashed"></div>

                                        <div class="form-group">
                                            <div class="col-md-3">
                                                <label><br></label>
                                                <a class="btn btn-info col-xs-12" data-toggle="modal" data-target="#modal_info">
                                                    <i class="fa fa-info-circle"></i>
                                                    Informações Climáticas
                                                </a>
                                            </div>
                                            <div class="col-md-2">
                                                {{ form_label(form.structureType, 'Fabricante da Estrutura') }}
                                                {{ form_widget(form.structureType,{attr:{class:'form-control'}}) }}
                                            </div>
                                            <div class="col-md-3">
                                                {{ form_label(form.roofType, 'Tipo de Telhado') }}
                                                {{ form_widget(form.roofType,{attr:{class:'form-control'}}) }}
                                            </div>
                                            <div class="col-md-2">
                                                {{ form_label(form.infConsumption, 'Consumo') }}
                                                {{ form_widget(form.infConsumption,{attr:{class:'form-control'}}) }}
                                            </div>
                                            <div class="col-md-2">
                                                <label><br></label>
                                                <button type="submit" data-style="zoom-in" class="btn btn-success btn-md pull-right col-xs-12 ladda-button">
                                                    <i class="fa fa-save"></i>
                                                    {{ project.token ? 'Atualizar' : 'Iniciar' }}
                                                </button>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-6 col-xs-12 btn-group">
                                                {#<a data-toggle="modal" data-target="#modal_estimate_power" id="btn-estimate-power" class="btn btn-default col-md-6 col-xs-12">
                                                    <i class="fa fa-unsorted"></i> Estimar Potência
                                                </a>#}
                                            </div>
                                            {#<div class="col-md-6 col-xs-12">
                                                <div class="row">
                                                    <label class="col-sm-1 col-xs-12 control-label">
                                                        KIT
                                                    </label>
                                                    <div class="col-sm-11 col-xs-12">
                                                        {{ form_widget(form.kit,{'attr':{'class':'form-control'}}) }}
                                                    </div>
                                                </div>
                                            </div>#}
                                        </div>

                                        <div class="form-group hide">
                                            <label class="col-sm-1 control-label">Lat</label>
                                            <div class="col-sm-4">
                                                {{ form_widget(form.latitude,{'attr':{'class':'form-control'}}) }}
                                            </div>
                                            <label class="col-sm-1 control-label">Lng</label>
                                            <div class="col-sm-4">
                                                {{ form_widget(form.longitude,{'attr':{'class':'form-control'}}) }}
                                            </div>
                                        </div>

                                        <div class="hide_">
                                            {{ form_rest(form) }}
                                        </div>

                                        {{ form_end(form) }}

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12" id="block_components">
                                <div class="panel panel-info">
                                    <div class="panel-heading">
                                        Inversores e Módulos do Kit
                                    </div>
                                    <div class="panel-body" id="project_components" data-load="{{ project.id ? path('project_components',{id:project.id}) }}">
                                        {% if project.id %}
                                            {% include view('helper.spinner') %}
                                        {% endif %}
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12" id="block_groups">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        Disposição dos Módulos
                                    </div>
                                    <div class="panel-body" id="project_groups" data-load="{{ project.id ? path('project_groups',{id:project.id}) }}">
                                        {% if project.id %}
                                            {% include view('helper.spinner') %}
                                        {% endif %}
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row" id="block_config">
                            <div class="col-md-12">
                                <h3 class="hipper-label"> 2. Configuração do Sistema </h3>
                            </div>

                            <div id="project_inverters" data-load="{{ project.id ? path('project_inverters',{id:project.id}) }}" class="col-md-12">
                                {% if project.id %}
                                    {% include view('helper.spinner') %}
                                {% endif %}
                            </div>
                        </div>

                        <div class="row" id="block_results">
                            <div class="col-md-12">
                                <h3 class="hipper-label"> 3. Resultados </h3>
                            </div>

                            <div class="col-md-12">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        Gráfico e Dados
                                    </div>
                                    <div class="panel-body">

                                        <div class="row">
                                            <div id="calc_errors" class="col-md-12"></div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-8">
                                                &nbsp;
                                            </div>
                                            <div class="col-md-4">
                                                <button id="process_button" data-style="zoom-in"
                                                        class="btn hide btn-bg btn-block btn-warning ladda-button pull-right">
                                                    <i class="fa fa-calculator"></i>
                                                    {{ 'project.calculate'|trans }}
                                                </button>
                                            </div>
                                        </div>

                                        <div class="hr-line-dashed"></div>

                                        <div class="row">
                                            <div class="col-md-8" id="chart_container">
                                                <canvas id="default_chart" height="500"></canvas>
                                            </div>

                                            <div class="col-md-4" style="margin-top:5rem;" id="info_process">
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {% include view('project.breadcrumbs') %}

    </div>

{% endblock %}

{% block scripts %}

    {% include view('helper.plugins_js') %}
    {% include view('helper.numbers') %}
    {% include view('helper.request') %}

    {% set ajax_process = true %}

    <script>

        var Project = {
            id: {{ project.id is not null ? project.id : 'null' }}
        };

        /*form_project.on('submit', function(event){
            if(!project_customer.val() && 'save' == form_mode){
                event.preventDefault();
                swal({
                    title: "Contato indefinido",
                    text: "Para prosseguir é necessário selecionar um contato!",
                    type: "error",
                    showConfirmButton: true
                });
                return false;
            }
        });*/

        var ProjectManager = {
            btnProcess: $('#process_button'),
            infoProcess: $('#info_process'),
            processing: false,
            project: {
                id: {{ project.id is not null ? project.id : 'null' }}
            },
            request: function(config){
                Request.send(config);
                /*var options = $.extend({},{
                    url: null,
                    method: 'get',
                    data: {}
                }, config);
                $.ajax({
                    url: options.url,
                    method: options.method,
                    data: options.data,
                    complete: function(xhr){
                        if(options.hasOwnProperty('callback')){
                            options.callback(xhr);
                        }
                    }
                });*/

            },
            operations: function(id){

                var url = '{{ path('project_inverter_metadata',{id:'_id_'}) }}'.replace(/_id_/g,id);
                var container = $('[data-operation="'+id+'"]');
                var inverter_info = container.find('.inverter-info');
                var classes_info = 'btn-info btn-success btn-danger btn-warning';
                var areas_info = container.find('a.module-info');

                ProjectManager.request({
                    url: url,
                    callback: function(xhr){
                        var response = xhr.responseJSON;
                        if(response.hasOwnProperty('operable')){
                            inverter_info.removeClass(classes_info).addClass('btn-'+response.level);
                            $.each(response.areas, function(i, area){
                                if(area.hasOwnProperty('level')){
                                    $(areas_info[i]).removeClass(classes_info).addClass('btn-'+area.level);
                                }
                            });
                        }
                    }
                });

            },
            change: function(element, path, reload){
                element.attr('data-load', path);
                if(reload){
                    ProjectManager.load(element);
                }
            },
            submit: function(form, callback){
                ProjectManager.request({
                    url: form.attr('action'),
                    method: form.attr('method'),
                    data: form.serialize(),
                    callback: callback
                });
            },
            load: function(element){
                if('string' == typeof element){
                    element = $(element);
                }
                if(element.length){
                    var url = element.attr('data-load');
                    if(url){
                        ProjectManager.request({
                            url: url,
                            callback: function(xhr){
                                element.html(xhr.responseText);
                                element.data('load', '');
                            }
                        });
                    }else{
                        console.log('ELEMENT DOES NOT HAVE URL: ' + element);
                    }
                }else{
                    console.log('ELEMENT NOT FOUND: ' + element);
                }
            },
            chart: {
                element: 'default_chart',
                generate: function(data) {
                    AppChart.projectChart({
                        fillColor: "rgba(26,179,148,0.5)",
                        strokeColor: "rgba(26,179,148,0.8)",
                        pointColor: "rgba(26,179,148,0.75)",
                        //pointstrokeColor: "yellow",
                        data: data,
                        element: ProjectManager.chart.element
                    });
                },
                clear: function(){
                    var canvas = AppChart.getCanvas(ProjectManager.chart.element);
                    if(canvas) {
                        var context = canvas.getContext('2d');
                        context.clearRect(0, 0, canvas.width, canvas.height);
                    }
                },
                getData: function(){
                    return AppChart.getDataUrl(ProjectManager.chart.element);
                },
                init: function(){

                    var chart_container = $('#chart_container');
                    $('#'+ProjectManager.chart.element).attr('width', chart_container.width());
                    /*window.setTimeout(function(){
                        Project.isLoaded = true;
                    }, 1000);*/
                }
            },
            /**
             * Process project and generate chart
             */
            process: function(){
                if(ProjectManager.project.id){
                    ProjectManager.request({
                        url: '{{ path('project_process',{id:'_id_'}) }}'.replace(/_id_/g, ProjectManager.project.id),
                        method: 'post',
                        callback: function(xhr){
                            var response = xhr.responseJSON;
                            if(response.hasOwnProperty('data')){
                                ProjectManager.chart.generate(response.data);
                                ProjectManager.infoProcess.html(response.info);
                            }
                        }
                    });
                }
            },
            configureProjectForm: function(){
                {% if true %}
                var form_project = $('#form_project');
                button = form_project.find('button[type="submit"]');
                button.ladda();
                form_project.on('submit', function(event){
                    event.preventDefault();
                    var customer = $('#project_customer').val();
                    if(!customer){
                        swal({
                            title: "Contato indefinido",
                            text: "Para prosseguir é necessário selecionar um contato!",
                            type: "error",
                            showConfirmButton: true
                        });
                    }else {

                        button.ladda('start');

                        ProjectManager.submit(form_project, function (xhr) {
                            button.ladda('stop');
                            var response = xhr.responseJSON;
                            if(response.hasOwnProperty('project')){
                                ProjectManager.project = response.project;
                                ProjectManager.onSaveProject();
                            }
                        });
                    }
                });
                {% endif %}
            },
            configureBlocks: function(){
                if(ProjectManager.project.id){
                    $('#block_components, #block_groups, #block_config, #block_results').show();
                }else{
                    $('#block_components, #block_groups, #block_config, #block_results').hide();
                }
            },
            loadComponents: function(){
                ProjectManager.load($('#project_components'));
            },
            loadGroups: function(){
                ProjectManager.load($('#project_groups'));
            },
            loadInverters: function(){
                ProjectManager.load($('#project_inverters'));
            },
            loadModalInfo: function(){

                var area_operation_inner = $('#area_operation_inner');
                var area_operation_spinner = area_operation_inner.html();
                $('#modal_operation_info').on('show.bs.modal', function(event){
                    var target = $(event.relatedTarget);
                    var href = target.data('href');
                    if(href) {
                        area_operation_inner.html(area_operation_spinner);
                        $.ajax({
                            url: href,
                            success: function (response) {
                                area_operation_inner.html(response);
                            }
                        });
                    }
                });

            },
            onProjectCreate: function(project){
                //console.log(project);
                ProjectManager.loadComponents();
            },
            onProjectUpdate: function(){
                //console.log('project_updated');
            },
            onSaveProject: function(){

                var project_url = '{{ path('project_update',{id:'_id_'}) }}'.replace(/_id_/g, ProjectManager.project.id);
                window.history.pushState({}, null, project_url);
                $('#form_project').attr('action', project_url);

                var components_url = '{{ path('project_components',{id:'_id_'}) }}'.replace(/_id_/g, ProjectManager.project.id);
                $('#project_components').attr('data-load', components_url);
                ProjectManager.loadComponents();

                var groups_url = '{{ path('project_groups',{id:'_id_'}) }}'.replace(/_id_/g, ProjectManager.project.id);
                $('#project_groups').attr('data-load', groups_url);
                ProjectManager.loadGroups();

                var inverters_url = '{{ path('project_inverters',{id:'_id_'}) }}'.replace(/_id_/g, ProjectManager.project.id);
                $('#project_inverters').attr('data-load', inverters_url);
                ProjectManager.loadInverters();

                ProjectManager.configureBlocks();

                ProjectManager.process();
            },
            onUpdateInverter: function(){
                ProjectManager.loadComponents();
            },
            beforeUpdateArea: function(){
                ProjectManager.infoProcess.html('');
                ProjectManager.chart.clear();

            },
            onUpdateArea: function(){
                ProjectManager.loadComponents();
                ProjectManager.process();
            },
            /**
             * Initialize Manager
             */
            onLoadManager: function(){

                ProjectManager.configureProjectForm();
                ProjectManager.chart.init();

                if(ProjectManager.project.id) {
                    ProjectManager.loadComponents();
                    ProjectManager.loadGroups();
                    ProjectManager.loadInverters();
                    ProjectManager.process();
                }

                ProjectManager.configureBlocks();
                ProjectManager.loadModalInfo();
            }
        };

        ProjectManager.onLoadManager();

        /*------------------------------------------------------------*/

        var form_project = $('form[name="project"]');
        var form_mode = 'save';

        /*var Project = {
            isLoaded: false,
            chart: {
                element: 'default_chart',
                generate: function(data) {
                    AppChart.projectChart({
                        fillColor: "rgba(26,179,148,0.5)",
                        strokeColor: "rgba(26,179,148,0.8)",
                        pointColor: "rgba(26,179,148,0.75)",
                        //pointstrokeColor: "yellow",
                        data: data,
                        element: Project.chart.element
                    });
                },
                init: function(){
                    var chart_container = $('#chart_container');
                    $('#'+Project.chart.element).attr('width', chart_container.width());
                    window.setTimeout(function(){
                        Project.isLoaded = true;
                    }, 1000);
                }
            },
            clear_info: function(){
                $('#calc_errors, #calc_info').html('');
                var canvas = AppChart.getCanvas(Project.chart.element);
                if(canvas) {
                    var context = canvas.getContext('2d');
                    context.clearRect(0, 0, canvas.width, canvas.height);
                }
            },
            getChartData: function(){
                return AppChart.getDataUrl(Project.chart.element);
            },
            processing: false,
            init: function(){
                Project.chart.init();
                Project.clear_info();
            }
        };

        Project.init();*/

        var project_chart = null;
        var editing_project = false;
        function create_alert_box(type, title, message){
            return '<div class="alert alert-'+type+'"><a class="alert-link">' + title + '</a>' + message + '</div>';
        }

        $(function(){

            var project_kit = $('#project_kit');
            var project_customer = $('#project_customer');
            var project_saleStage = $('#project_saleStage');

            function createCustomerChosen(){

                /*if(!project_customer.find('optgroup').length) {
                 var opt_person = $('optgroup[label="person"]');
                 var opt_company = $('optgroup[label="company"]');
                 if(!opt_company.length){
                 project_customer.append('<optgroup label="company"></optgroup>');
                 }
                 if(!opt_person.length){
                 project_customer.prepend('<optgroup label="person"></optgroup>');
                 }
                 }*/
                //var opt_groups = project_customer.find('optgroup');
                //$(opt_groups[0]).attr('label', '{{ 'Peoples'|trans }}');
                //$(opt_groups[1]).attr('label', '{{ 'Companies'|trans }}');

                var buttons = '<div class="btn-group btn-group-sm">' +
                    '<button data-context="person" class="btn btn-xs btn-primary ladda-button" data-style="zoom-out"><i class="fa fa-plus"></i> {{ 'Pessoa'|trans }}</button>' +
                    '<button data-context="company" class="btn btn-xs btn-primary ladda-button" data-style="zoom-out"><i class="fa fa-plus"></i> {{ 'Company'|trans }}</button>' +
                    '</div>';

                var contact_url = '{{ path('contact_fast_create',{context:'_ctx_'}) }}';

                project_customer.chosen({
                    width: '100%',
                    no_results_text: buttons
                }).on('chosen:no_results', function (event, params) {
                    var add_button = $('[data-context]');
                    add_button.ladda();
                    add_button.on('click', function () {
                        var _btn = $(this);
                        var _ctx = _btn.data('context');
                        //var _target = _ctx == 'person' ? opt_groups[0] : opt_groups[1] ;
                        $.ajax({
                            url: contact_url.replace(/_ctx_/g, _btn.data('context')),
                            method: 'post',
                            data: {name: params.chosen.search_field.val()},
                            success: function(response){
                                if('success' == response.status){
                                    var data = response.data;
                                    project_customer.append('<option selected="selected" value="' + data.id + '">' + data.name + '</option>');
                                    project_customer.trigger('chosen:updated');
                                    woopra.track('contato');
                                }
                            },
                            error: function(response){
                                console.log(response.status);
                            }
                        });
                    });
                });
            }

            /*form_project.on('submit', function(event){
                if(!project_customer.val() && 'save' == form_mode){
                    event.preventDefault();
                    swal({
                        title: "Contato indefinido",
                        text: "Para prosseguir é necessário selecionar um contato!",
                        type: "error",
                        showConfirmButton: true
                    });
                    return false;
                }
            });*/


            {% if project.id is null %}
            //project_customer.find('optgroup:first-child').attr('label','{{ 'Peoples'|trans }}');
            ///project_customer.find('optgroup:last-child').attr('label','{{ 'Companies'|trans }}');
            ///project_customer.chosen();
            project_kit.chosen();
            createCustomerChosen();
            {% endif %}

            {% if project.id and ajax_process %}

            var form_button = form_project.find('[type="submit"]');
            var inverter_forms = $('#inverter_forms');
            var inverter_spinner = inverter_forms.html();
            var current_kit = project_kit.val();

            function lock_form_project(){
                editing_project = false;
                form_mode = 'edit';
                form_project.find('input, select').prop('disabled', true);
                form_button.html('<i class="fa fa-pencil"></i> {{ 'Edit'|trans }}');
            }

            function unlock_form_project(){
                editing_project = true;
                form_mode = 'save';
                form_project.find('input, select').prop('disabled', false);
                form_button.html('<i class="fa fa-save"></i> {{ 'Save'|trans }}').ladda();
                project_kit.chosen();
                //project_customer.chosen();
                createCustomerChosen();
                project_saleStage.chosen();
                //clear_calculation_boxes();
                $('#project_saleStage').chosen();
                //Project.clear_info();
            }

            function check_form_project(){
                if(project_kit.val()){
                    lock_form_project();
                }else{
                    unlock_form_project();
                }
            }

            function after_update_kit(){
                project_kit.chosen('destroy');
                project_customer.chosen('destroy');
                project_saleStage.chosen('destroy');
                check_form_project();
            }

            project_customer.find('optgroup:first-child').attr('label','{{ 'Peoples'|trans }}');
            project_customer.find('optgroup:last-child').attr('label','{{ 'Companies'|trans }}');
            check_form_project();

            function get_inverters_forms(){
                inverter_forms.html(inverter_spinner);
                $.ajax({
                    url: '{{ path('project_inverters_forms', {token:project.token}) }}',
                    success: function(response){
                        if(response.hasOwnProperty('forms')){
                            var forms = response.forms;
                            if(forms.length){
                                inverter_forms.html('');
                                for(var i=0; i<forms.length;i++){
                                    inverter_forms.append(forms[i]);
                                }
                            }
                        }
                    }
                });
            }
            //get_inverters_forms();

            /*var project_info = $('#project_info');
            var project_info_loader = project_info.html();
            function load_project_info(){
                project_info.html(project_info_loader);
                $.ajax({
                    url: '{{ path('project_info',{token: project.token}) }}',
                    success: function(response){
                        project_info.html(response);
                    }
                });
            }*/
            //load_project_info();

            form_button.ladda();
            /*form_project.on('submit', function(event) {
                event.preventDefault();
                if('save' == form_mode) {
                    var form = $(this);
                    form_button.ladda('start');
                    $.ajax({
                        url: form.attr('action'),
                        method: form.attr('method'),
                        data: form.serialize(),
                        success: function (response) {
                            form_button.ladda('stop');
                            if (current_kit != project_kit.val()) {
                                current_kit = project_kit.val();
                                get_inverters_forms();
                                //load_project_info();
                            }
                            after_update_kit();
                        }
                    });
                }else{
                    unlock_form_project();
                }
            });*/

            {% endif %}

            var google_maps = 'https://maps.googleapis.com/maps/api/geocode/json?address=_addr_&key=AIzaSyDNgvmkQ1790PSv2CyamhtCXL0qh0bClDI';
            var choice_state = $('#project_state');
            var choice_city = $('#project_city');
            var input_lat = $('#project_latitude');
            var input_lng = $('#project_longitude');
            var modal_info = $('#modal_info');

            {#choice_state.on('change', function(){
                var state = $(this).val();
                choice_city.find('option').remove();
                choice_city.append('<option>{{ 'Loading'|trans }}...</option');
                $.ajax({
                    url: '{{ path('brazil_cities',{state:'_state_'}) }}'.replace(/_state_/g, state),
                    success: function (response) {
                        if(response.hasOwnProperty('cities')){
                            var options = '';
                            $.each(response.cities, function(i, city){
                                options += '<option>'+city+'</option>';
                            });
                            choice_city.html(options);

                            {% if project.id is null %}
                            choice_city.trigger('change');
                            {% endif %}
                        }
                    }
                });
            }){% if project.id is null %}.trigger('change'){% endif %};
            #}

            /*function load_geocode(){
                var state = choice_state.val();
                var city = choice_city.val();

                if(state && city){
                    var address = $.trim(city+'-'+state).replace(/ /g,'+');
                    var geocode_url = google_maps.replace(/_addr_/g, address);
                    $.ajax({
                        url: geocode_url,
                        success: function(response){
                            if(response.hasOwnProperty('results')){
                                var location = response.results[0].geometry.location;
                                input_lat.val(location.lat);
                                input_lng.val(location.lng);
                            }
                        }
                    });
                }
            }*///load_geocode();

            /*choice_city.on('change', function(){
                load_geocode();
            });*/

            var modal_body = modal_info.find('.modal-body'), modal_spinner = modal_body.html();
            modal_info.on('show.bs.modal', function(){
                if(!input_lat.val() || !input_lng.val()){
                    modal_body.html('<h2 class="text-center"> Coordenadas indefinidas &mdash; Informe um endereço </h2>');
                }else{
                    modal_body.html(modal_spinner);
                    $.ajax({
                        url: '{{ path('coordinate_info') }}',
                        method: 'post',
                        data: {latitude:input_lat.val(), longitude:input_lng.val()},
                        success: function (response) {
                            modal_body.html(response);
                        }
                    });
                }
            });


            $('#form-estimate-power').on('submit', function(event){
                event.preventDefault();

                var latitude = input_lat.val();
                var longitude = input_lng.val();
                var consumption = $('#consumption').val();
                var error_inner = $('#form-estimate-error');
                var button = $(this).find('button');
                var estimate = true;

                if(!latitude || !longitude){
                    estimate = false;
                    error_inner.html('Determine a localização!');
                }

                if(!consumption){
                    estimate = false;
                    error_inner.html('Informe a média de consumo');
                }

                button.ladda();
                if(estimate){
                    button.ladda('start');
                    $.ajax({
                        url: '{{ path('project_estimate_power') }}',
                        method: 'post',
                        data: {data:{latitude: latitude, longitude: longitude, consumption: consumption}},
                        success: function(response){
                            if(response.hasOwnProperty('error')){
                                error_inner.html(response.error);
                            }else{
                                $('#estimate_power').val(response.power);
                            }
                            button.ladda('stop');
                        }
                    });
                }
            });
        });

        {% if project.id %}
/*
        var calc_button = $('#calc_button');
        var calc_status = $('#calc_status');
        var calc_spinner = calc_status.html();
        var calc_errors = $('#calc_errors');
        calc_status.html('');
        calc_button.ladda();
        function process_project(){
            Project.processing = true;
            calc_button.ladda('start');
            $.ajax({
                url: '{{ path('project_process',{id:project.id}) }}',
                method: 'post',
                success: function(response){
                    if(response.hasOwnProperty('data')) {
                        Project.chart.generate(response.data);
                        $('#calc_info').html(response.info);
                        calc_errors.html(response.warnings);
                    }else{
                        calc_errors.html(response);
                    }
                    calc_button.ladda('stop');
                    Project.processing = false;
                }
            });
        }*/

        {#{% if project.computable %}
            process_project();
        {% endif %}#}

        var common_error = 'Para prosseguir é necessário salvar as “Informações Principais” e todas as áreas de projeto';
        /*calc_button.on('click', function(){
            //process_project();
            /!*var alerts = '';
            if(editing_project || $('select.area-module:not(:disabled)').length){
                alerts = create_alert_box('danger', '', common_error);
            }
            if(!alerts.length) {
                process_project();
            }else{
                calc_errors.html(alerts);
            }*!/
        });*/


        {# OPERATION - INVERTERS AND AREAS #}
        {#
        function check_operations(id){
            var url = '{{ path('project_check_operations',{id:'_id_'}) }}'.replace(/_id_/g,id);
            var container = $('[data-operation="'+id+'"]');
            var inverter_info = container.find('.inverter-info');
            var classes_info = 'btn-info btn-success btn-danger btn-warning';
            var areas_info = container.find('a.module-info');

            $.ajax({
                url: url,
                dataType: 'json',
                success: function(response){
                    if(response.hasOwnProperty('operable')){
                        inverter_info.removeClass(classes_info).addClass('btn-'+response.level);
                        $.each(response.areas, function(i, area){
                            if(area.hasOwnProperty('level')){
                                $(areas_info[i]).removeClass(classes_info).addClass('btn-'+area.level);
                            }
                        });
                    }
                }
            });
        }
        #}

        /*var area_operation_inner = $('#area_operation_inner');
        var area_operation_spinner = area_operation_inner.html();
        $('#modal_operation_info').on('show.bs.modal', function(event){
            alert('ok');
            var target = $(event.relatedTarget);
            var href = target.data('href');
            if(href) {
                area_operation_inner.html(area_operation_spinner);
                $.ajax({
                    url: href,
                    success: function (response) {
                        area_operation_inner.html(response);
                    }
                });
            }
        });*/

        {% endif %}

        {#$('[data-nav]').on('click', function(event){
            event.preventDefault();
            var nav = $(this).data('nav');
            var href = $(this).data('href');
            if('#' != href){
                if('project' != nav /*&& Project.isLoaded*/) {
                    var chart_data = ProjectManager.chart.getData();
                    if (/*editing_project ||*/ $('select.area-module:not(:disabled)').length) {
                        swal('Editando', 'Para prosseguir é necessário salvar as "Informações Principais" e todas as áreas do projeto!', 'error');
                    } else if(!chart_data || !$('#info_process').html()) {
                        swal('Calcular', 'Para prosseguir é necessário efetuar o cálculo!', 'error');
                    } else if(ProjectManager.processing){
                        swal('Calculando', 'Aguarde a finalização do cálculo!', 'error');
                    }else{
                        {% if project.id %}
                        swal({
                            title: 'Aguarde...',
                            text: '',
                            type: 'info',
                            showConfirmButton: false
                        });
                        $.ajax({
                            url: '{{ path('project_check_step',{id:project.id}) }}',
                            method: 'post',
                            data: {step: nav},
                            complete: function (xhr) {
                                if (202 == xhr.status) {
                                    window.location.href = href;
                                } else {
                                    var response = xhr.responseJSON;
                                    swal({
                                        title: 'Erro',
                                        text: response.error,
                                        type: 'error',
                                        html: true
                                    });
                                }
                            }
                        });
                        {% endif %}
                    }
                }
            }else{
                swal('Erro', 'O projeto não foi inicializado!', 'error');
            }
        });
        #}

    </script>

    {# GOOGLE MAPS #}
    {% include view('helper.google_maps') with({
        latitude: 'project_latitude',
        longitude: 'project_longitude',
        input: 'project_address',
        zoom: project.latitude ? 17 : 3
    }) %}


    {# VALIDATE STEPS #}
    {% include view('project.steps') %}

{% endblock %}