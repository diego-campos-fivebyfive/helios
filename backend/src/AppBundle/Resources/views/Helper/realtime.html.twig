<script>
    {# general scripts #}
    $(function () {

        {% for notice in app.request.session.flashBag.get('notice') %}
        toastr.{{ notice.type }}('{{ notice.message }}', '{{ notice.title }}', {
            positionClass: 'toast-top-center',
            progressBar: true
        });
        {% endfor %}
    });

    var currentUnreadMessages = null;
    var beepSound = new Audio("{{ asset('assets/sound/beep_messages.wav') }}");

    function getUnreadMessageCount() {
        $.ajax({
            type: "get",
            url: "{{ route('unread_message_count') }}",
            success: function(response) {
                var unreadMessages = response.unreadMessages;

                if (unreadMessages > currentUnreadMessages && currentUnreadMessages !== null) {
                    beepSound.play();
                }

                currentUnreadMessages = unreadMessages;

                $('#unreadMessages').html(unreadMessages);

                if (unreadMessages) {
                    $('#unreadMessages').show();
                } else {
                    $('#unreadMessages').hide();
                }
            }
        });
    }

    getUnreadMessageCount();

    var Realtime = {
        tasks: {
            menu: function () {
                var task_menu = $('a[href="{{ path('task_index') }}"]');
                if (task_menu.length) {
                    task_menu = task_menu.first();
                    $.ajax({
                        url: '{{ path('tasks_count') }}',
                        complete: function (xhr) {
                            if (200 == xhr.status) {
                                var response = xhr.responseJSON;
                                if (response.count) {
                                    var counter = $('#tasks-count');
                                    if (counter.length) {
                                        counter.html(response.count);
                                    } else {
                                        task_menu.append('<span id="tasks-count" class="label label-warning pull-right">' + response.count + '</span>')
                                    }
                                }
                            }
                        }
                    });
                }
            }
        },
        orders: {
            messages: function () {
                setInterval(getUnreadMessageCount, 10000);
            }
        },
        online: function () {
            $.ajax({
                url: '{{ path('app_check_online') }}',
                complete: function (xhr) {
                    var response = xhr.responseJSON;
                    if(!response.online && 'undefined' != typeof woopra){
                        woopra.track();
                    }
                }
            });
        }
    };

    {% if app.request.attributes.get('_route') != 'task_index' %}
        Realtime.tasks.menu();
    {% endif %}

    Realtime.online();
    {% if app.user.isPlatform %}
        Realtime.orders.messages();
    {% endif %}
</script>
