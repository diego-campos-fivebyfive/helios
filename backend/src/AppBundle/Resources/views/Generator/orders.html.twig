{% set orders = order.childrens %}

<table class="table table-bordered table-hover flow-md">
    <thead>
    <tr>
        <th colspan="5">
            ORÇAMENTO ATUAL
        </th>
    </tr>
    <tr>
        <th> Descrição </th>
        <th> Data </th>
        <th> Valor </th>
        <th> &nbsp; </th>
    </tr>
    </thead>

    <tbody>

    {% for order in orders if not order.budget %}

        <tr>
            <td> {{ order.description }} </td>
            <td width="10%"> {{ order.createdAt|date('d/m/Y') }} </td>
            <td width="15%"> {{ order.total|currency }} </td>
            <td width="20%">
                <div class="btn-group btn-group-sm btn-group-justified">
                    <a href="{{ path('generator_orders_update',{id:order.id}) }}" class="btn btn-success">
                        <i class="fa fa-pencil"></i>
                    </a>
                    <a data-delete="{{ path('generator_orders_delete',{id:order.id}) }}" class="btn btn-danger">
                        <i class="fa fa-trash"></i>
                    </a>
                </div>
            </td>
        </tr>
    {% endfor %}
    </tbody>
    <tfoot>
        <tr>
            <td></td>
            <td>Sub Total</td>
            <td>
               {{ order.total|currency }}
            </td>
            <td></td>
        </tr>
    </tfoot>
</table>

<div class="panel panel-warning">
    <div class="panel-heading">
        <i class="fa fa-list"></i>
        Frete
    </div>
    <div class="panel-body" id="generator_financial_shipping">
    </div>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        Total
    </div>
    <div class="panel-body">
        <div class="col-md-8"><h2>Valor total:</h2></div>
        <div class="col-md-4 text-center"><h2>{{ order.total|currency }}</h2></div>
    </div>
</div>

    <button type="button" id="btn_budget" data-url="{{ path('order_budget_create') }}" class="btn btn-warning pull-right">
        <i class="fa fa-arrow-right"></i>
        Enviar solicitação para SICES
    </button>

{#</form>#}

<script>

    var pagination = $('ul.pagination');
    //var data_update = $('[data-update]');
    var data_delete = $('[data-delete]');
    //var form_budget = $('#form_budget');
    var btn_budget = $('#btn_budget');

    /*data_update.on('click', function () {
        Request.send({
            url: $(this).data('update'),
            callback: function (xhr) {
                $('#generator_form').html(xhr.responseText);
            }
        })
    });*/

    data_delete.on('click', function () {

        var url = $(this).data('delete');

        swal({
            title: 'Confirma a exclusão do pedido?',
            text: 'Este processo não pode ser revertido!',
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: '{{ 'Confirmar'|trans }}',
            cancelButtonText: '{{ 'Cancelar'|trans }}',
            closeOnConfirm: false
        }, function () {

            sweetAlert({
                title: "Excluindo...",
                text: "Aguarde!",
                type: "info",
                showConfirmButton: false
            });

            Request.send({
                url: url,
                method: 'post',
                data: {_method: 'delete'},
                callback: function (xhr) {
                    if (xhr.status != 200) {
                        swal('Atenção', 'Falha ao executar a operação', 'error');
                    } else {
                        swal.close();
                        GeneratorHandler.getOrders();
                    }
                }
            });
        });
    });

    btn_budget.on('click', function(event){
        event.preventDefault();
        var url = $(this).data('url');
        var data = {orderId: orderId};
        if({{ orders|length }}) {

            swal({
                title: 'Confirma a Solicitação?',
                text: 'Os dados serão enviados para verificação',
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: '{{ 'Confirmar'|trans }}',
                cancelButtonText: '{{ 'Cancelar'|trans }}',
                closeOnConfirm: false
            }, function () {

                swal({
                    title: "Solicitando...",
                    text: "Aguarde!",
                    type: "info",
                    showConfirmButton: false
                });

                Request.send({
                    url: url,
                    method: 'post',
                    data: data,
                    callback: function (xhr) {
                        if (xhr.status != 200) {
                            swal('Atenção', 'Falha ao executar a operação', 'error');
                        } else {

                            swal({
                                title: "Solicitação recebida com sucesso!",
                                text: "Você receberá a confirmação em seu e-mail.",
                                type: "success",
                                showConfirmButton: true
                            }, function () {
                                var order = xhr.responseJSON.order;
                                window.location.href = '{{ path('order_show',{id:'_id_'}) }}'.replace(/_id_/g, order.id);
                            });
                        }
                    }
                });
            });
        }else{

            swal({
                title: "Nenhum orçamento para envio.",
                type: "warning"
            });
        }
    });

    var ShippingManager = {
        getElements: function () {
            Request.send({
                url: '{{ path('generator_financial_shipping', {id:order.id}) }}',
                callback: function (xhr) {
                    $('#generator_financial_shipping').html(xhr.responseText);
                }
            });
        }
    };

    ShippingManager.getElements();

</script>