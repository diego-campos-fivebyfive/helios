{% set isPlatform = app.user.isPlatform %}
{% set isPromo = order.isPromotional %}
{% set showPrices = not isPromo or app.user.isPlatform %}
<table class="table table-bordered table-hover">
    <thead>
    <tr>
        <th> Código</th>
        <th> Descrição</th>
        {% if isPlatform %}
            <th> Markup</th>
            <th> Desconto</th>
        {% endif %}
        {% if showPrices %}
            <th class="col-md-2"> Custo Unitário</th>
        {% endif %}
        <th> Qtde</th>
        {% if showPrices %}
            <th class="col-md-2"> Custo Total</th>
        {% endif %}
        <th>&nbsp;</th>
    </tr>
    </thead>
    <tbody id="order_elements">

    {% for element in order.elements %}

        <tr>
            <td width="15%"> {{ element.code }} </td>
            <td> {{ element.description }} </td>
            {% if isPlatform %}
                <td width="10%">
                    <input type="text"
                           placeholder="Markup"
                           class="form-control markup"
                           data-element-update="{{ path('order_element_update',{id:element.id}) }}"
                           id="input{{ element.id }}"
                           name="markup"
                           readonly="readonly"
                            {{ not (app.user.isPlatformMaster or app.user.isPlatformAdmin) ? 'disabled="disabled"' }}
                           value="{{ element.markup|round(2) }}">
                </td>
                <td width="10%">
                    <input type="text"
                           placeholder="Desconto"
                           class="form-control markup"
                           data-element-update="{{ path('order_element_update',{id:element.id}) }}"
                           id="discount_input_{{ element.id }}"
                           name="discount"
                           readonly="readonly"
                           value="{{ element.discount|round(2) }}">
                </td>
            {% endif %}
            {% if showPrices %}
                <td width="10%"> {{ element.unitPrice|currency }} </td>
            {% endif %}
            <td width="10%" class="text-center">
                <input type="number"
                       name="quantity"
                       data-element-update="{{ path('order_element_update',{id:element.id}) }}"
                       placeholder="Qtde"
                       value="{{ element.quantity }}"
                       readonly="readonly"
                       min="1"
                       class="form-control">
            </td>
            {% if showPrices %}
                <td width="15%"> {{ element.total|currency }} </td>
            {% endif %}
            <td width="5%">
                <div class="btn-group btn-group-justified btn-group-sm">

                    {% set allowDelete = not element.isFamily('module') or order.elements('module').count > 1 %}

                    {% if allowDelete %}
                        <a data-delete-element="{{ path('generator_orders_element_delete',{id:element.id}) }}"
                           class="btn btn-block btn-danger">
                            <i class="fa fa-trash"></i>
                        </a>
                    {% endif %}

                </div>
            </td>
        </tr>

    {% endfor %}

    <tr>
        <td> SSS_2017_2018</td>
        <td> SEGURO SOLAR RISCO ENGENHARIA PROJETO E INSTALAÇÃO</td>
        {% if isPlatform %}
            <td></td>
            <td></td>
        {% endif %}
        {% if showPrices %}
            <td> {{ 0|currency }} </td>
        {% endif %}
        <td class="text-center"> 1</td>
        {% if showPrices %}
            <td> {{ 0|currency }} </td>
        {% endif %}
        <td></td>
    </tr>

    </tbody>
    <tfoot>
    {% if isPlatform %}
        <tr>
            <th colspan="2" class="text-right">Total de CMV</th>
            <th>{{ order.totalCmv|currency }}</th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            <th colspan="2" class="text-right">Total de impostos</th>
            <th>{{ order.totalTaxes|currency }}</th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    {% endif %}
    {% if showPrices %}
        <tr>
            <th colspan="2" class="text-right">{% if isPlatform %}Margem bruta da operação{% endif %}</th>
            {% if isPlatform %}
                <th>{{ order.margin|currency }}</th>
                <th></th>
            {% endif %}
            <th class="text-right" id="subtotal"> SubTotal</th>
            <th></th>
            <th> {{ order.subTotal|currency }} </th>
            <th></th>
        </tr>
    {% endif %}
    </tfoot>
</table>

<script>
    $('[data-delete-element]').on('click', function () {

        var row = $(this).closest('tr');
        var url = $(this).data('delete-element');

        swal({
            title: 'Confirma a exclusão do item?',
            text: 'Este processo não pode ser revertido!',
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: '{{ 'Confirmar'|trans }}',
            cancelButtonText: '{{ 'Cancelar'|trans }}',
            closeOnConfirm: false
        }, function () {

            sweetAlert({
                title: "Excluindo...",
                text: "Aguarde!",
                type: "info",
                showConfirmButton: false
            });

            Request.send({
                url: url,
                method: 'post',
                data: {_method: 'delete'},
                callback: function (xhr) {

                    if (200 == xhr.status) {
                        var response = xhr.responseJSON;
                        OrderManager.renderTotal(response.total);
                    }

                    swal.close();
                    OrderManager.getElements();
                    $('#add_order_element').trigger('change');
                    OrderInsurances.loadInsurances();
                    GeneratorHandler.getOrders();
                }
            });
        });
    });

    $('[data-update-element]').on('click', function () {
        Request.send({
            url: $(this).data('update-element'),
            callback: function (xhr) {
                $('#form_element_container').html(xhr.responseText);
            }
        });
    });

    if ({{ isPlatform ? 'true': 'false' }}) {
        var inputMarkup = $('.markup');
        $.each(inputMarkup, function (i, elem) {
            Numbers.mask($(elem));
        });
    }

    function updateOrderElement(url, property, value) {

        var data = {order: {}};
        data['order'][property] = value;
        $.post(url, data, function (response) {

            toastr.success('Item atualizado!', '', {
                positionClass: 'toast-top-center',
                progressBar: true,
                timeOut: 1000
            });

            OrderInsurances.loadInsurances();
            GeneratorHandler.refreshWizardModal();
            GeneratorHandler.resetBudgetButton();
            GeneratorHandler.getOrders();
        });
    }

    var elementUpdateFields = $('[data-element-update]');
    var currentValue = null;
    elementUpdateFields.on('blur', function () {

        var property = $(this).attr('name');
        var value = $(this).val();
        value = value.replace(',','.');

        if(value != currentValue) {

            switch (property) {
                case 'markup':
                    value = (value / 100);
                    break;
                case 'discount':
                    var maxOrderDiscount = {{ maxOrderDiscount }};
                    value = (maxOrderDiscount < value) ? maxOrderDiscount : value;
                    value = (value / 100);
                    break;
                case 'quantity':
                    if (!parseInt(value)) value = 1;
                    break;
            }

            updateOrderElement($(this).data('element-update'), property, value);
        }

        $(this).attr('readonly', 'readonly');

    }).on('focus', function () {
        currentValue = $(this).val();
        $(this).removeAttr('readonly');
    });

</script>
