<style>

    #components-container {
        width: 30%;
        float: left;
    }

    #components-container table {
        float: left;
    }

    #ranges-container {
        float: left;
        width: 70%;
        overflow-x: auto;
    }

    #components-container table td input,
    #ranges-container table td input {
        text-align: center;
    }

    #ranges-container table td input.form-control {
        width: 150px;
    }

    #ranges-container table tr td,
    #components-container table tr td {
        text-align: center;
        padding: 5px;
    }

    input.warning {
        border-color: #ff7701;
    }

    input.success {
        border-color: #0a6aa1;
    }
</style>


{% set components = collection.components %}

    {% for type, config in components if config.enabled %}

        {% set products = config.products %}

        <table width="100%" class="table table-bordered">
            <thead>
            <tr>
                <td class="text-center">
                    <h1> {{ config.label }} </h1>
                </td>
            </tr>
            </thead>
        </table>

        <div id="components-container">

            <table width="100%" class="table table-hover table-stripped">

                <tr>
                    <td width="40%"> Código</td>
                    <td width="60%"> Descrição</td>
                </tr>

                {% for code, data in products %}

                    {% set product = data.product %}

                    <tr>
                        <td><input disabled placeholder="Código" type="text" class="form-control" value="{{ code }}">
                        </td>
                        <td><input title="{{ product.description }}" disabled placeholder="Código" type="text" class="form-control text-left"
                                   value="{{ product.description }}"></td>
                    </tr>

                {% endfor %}

            </table>

        </div>


        <div id="ranges-container">

            <table width="100%" class="table table-hover table-stripped">
                <tr>
                    {% for offset, range in collection.ranges %}
                        <td> {{ offset }} kWp </td>
                    {% endfor %}
                </tr>

                {% for code, data in products %}

                    {% set ranges = data.ranges %}

                    <tr>
                        {% for range in ranges %}

                            <td>
                                <input placeholder="Preço" data-range="{{ range.toArray|json_encode }}" type="text"
                                       value="{{ range.price }}" class="form-control">
                            </td>

                        {% endfor %}
                    </tr>

                {% endfor %}

            </table>

        </div>

    {% endfor %}


<script>
    $('[data-range]').on('change', function () {

        var source = $(this);
        var data = source.data('range');

        if ('string' == typeof data) {
            data = JSON.parse(data);
        }

        data.price = source.val();

        source.removeClass('success error').addClass('warning');

        PlatformMemorial.request({
            url: '{{ path('platform_range_save') }}',
            method: 'post',
            data: data,
            callback: function (xhr) {
                var response = xhr.responseJSON;
                if (200 == xhr.status && response.hasOwnProperty('range')) {
                    source.removeClass('warning error').addClass('success');
                    source.data('range', JSON.stringify(response.range));
                } else {
                    source.removeClass('warning success').addClass('error');
                    swal('Ooops', 'Falha ao executar a operação', 'error');
                }

                window.setTimeout(function () {
                    source.removeClass('success error warning');
                }, 1500);
            }
        })
    });
</script>