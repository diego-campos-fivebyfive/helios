<link rel="stylesheet" href="{{ asset('assets/mentions/mentions.css') }}">
<style>
    .shadow {
        background-color: #eee;
        border-radius: 4px;
        -webkit-box-shadow: 2px 2px 2px #bbb;
        -moz-box-shadow:    2px 2px 2px #bbb;
        box-shadow:         2px 2px 2px #bbb;
    }
    .margin-bottom {
        margin-bottom: 15px;
    }
    .aling-right {
        text-align: right;
    }

    .name {
        color: #00a7ec;
    }
    .border-message {
        border: solid #C7C7C7 1px;
    }
    .delete-message {
        cursor: pointer;
    }
    [placeholder]:empty:before {
        content: attr(placeholder);
        color: #a0a0a0;
    }

    [placeholder]:empty:focus:before {
        content: "";
    }
    #message {
        max-height: 100px;
        min-height: 70px;
        min-width: 100%;
        max-width: 300px;
        overflow: auto;
        background: #fefefe;
        border: 2px solid #999;
        border-radius: 5px;
        padding: 5px;
        color: #2C2D30;
        word-wrap: break-word;
    }
</style>

<div id="list_messages" style="padding-top: 10px"></div>

<div style="border-bottom: solid 1px #c7c7c7; " class="col-md-12 margin-bottom"></div>

<div role="tabpanel">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs justify-content-end" role="tablist">
        {% if app.user.isPlatform %}
            <li role="presentation" class="active">
                <a href="#notes" aria-controls="notes" role="tab" data-toggle="tab">Notas</a>
            </li>
        {% endif %}
        <li role="presentation" {% if not app.user.isPlatform %} class="active" {% endif %}>
            <a href="#messages" aria-controls="messages" role="tab" data-toggle="tab">Mensagens</a>
        </li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content" style="padding-top: 8px">
        {% if app.user.isPlatform %}
            <div role="tabpanel" class="tab-pane active" id="notes">
                <form action="{{ path('order_message',{id:order.id}) }}" method="get" id="form_order_note" class="col-md-10 pull-right">
                    <div  class="mentions-before">
                        <ul id="note-list" class="mentions-list"></ul>
                    </div>
                    <div id="note" class="mention-editable margin-bottom" placeholder="Nota"></div>

                    <input id="restricted" type="hidden" value="restricted">
                    <button type="submit" class="btn btn-warning pull-right" ><i class="fa fa-send"></i> Enviar</button>
                </form>
            </div>
        {% endif %}

        <div role="tabpanel" class="tab-pane {% if not app.user.isPlatform %} active {% endif %}" id="messages">
            <form action="{{ path('order_message',{id:order.id}) }}" method="post" id="form_order_message" class="col-md-10 pull-right">
                <textarea id="message" class="margin-bottom" placeholder="Mensagem" ></textarea>
                <button type="submit" class="btn btn-success pull-right" ><i class="fa fa-send"></i> Enviar</button>
            </form>
        </div>
    </div>
</div>

<script src="{{ asset('assets/mentions/mentions.js') }}"></script>

<script>

    Message = {
        noteUsers: [],
        noteRoles: [],
        toUsers: [],
        toRoles: [],
        messageForm: $('#form_order_message'),
        noteForm: $('#form_order_note'),
        message: $('#message'),
        note: $('#note'),
        listMessages: $('#list_messages'),
        loaded: true,
        loadMessages: function () {
            $.ajax({
                url: '{{ path('order_message', {id:order.id}) }}',
                method: 'GET',
                complete: function (xhr) {
                    Message.listMessages.html(xhr.responseText);
                    Message.loaded = true;
                }
            });
        },
        sendMessage: function () {
            $.ajax({
                url: Message.messageForm.attr('action'),
                method: 'POST',
                data: {message: Message.message.val()},
                complete: function (xhr) {
                    Message.listMessages.html(xhr.responseText);
                    Message.sendEmail();
                    Message.message.val('');
                }
            });
        },
        sendNote: function () {
            $.ajax({
                url: Message.noteForm.attr('action'),
                method: 'POST',
                data: {
                    note: Message.note.html(),
                    restricted: $('#restricted').val(),
                    users: Object.values(Message.toUsers),
                    roles: Object.values(Message.toRoles)
                },
                complete: function (xhr) {
                    Message.listMessages.html(xhr.responseText);
                    Message.note.html('');
                }
            });
        },
        sendEmail: function () {

            $.ajax({
                url: '{{ path('message_email', {id:order.id}) }}',
                method: 'GET'
            });
        },
        prepareNote: function () {

            var mentions = Message.note.find("[data-mention]");

            Message.toUsers = [];
            Message.toRoles = [];

            if (mentions.length) {
                $.each(mentions, function(i, mention){
                    var delimiter = $(mention).data('delimiter');

                    if (delimiter === '@') {
                        user = Message.noteUsers[$(mention).data('mention')];
                        if (user) {
                            Message.toUsers[user.id] = user.id;
                        }
                    } else if (delimiter === '#') {
                        role = Message.noteRoles[$(mention).data('mention')];
                        if (role) {
                            Message.toRoles[role.id] = role.id;
                        }
                    }

                    if (i === mentions.length - 1) {
                        Message.sendNote();
                    }
                });
            } else {
                Message.sendNote();
            }
        },
        initNote: function () {
            $.ajax({
                url: "{{ path('list_mentions') }}",
                method: 'get',
                complete: function (xhr) {
                    Message.noteUsers = xhr.responseJSON.users;
                    Message.noteRoles = xhr.responseJSON.roles;

                    new Mentions('note', {
                        container: 'note-list',
                        providers: [
                            {
                                delimiter: '@',
                                data: Object.values(Message.noteUsers)
                            },
                            {
                                delimiter: '#',
                                data: Object.values(Message.noteRoles)
                            }
                        ]
                    });
                }
            });
        },
        init: function () {
            this.loadMessages();

            $('#form_order_message').on('submit', function (event) {
                event.preventDefault();
                if(Message.message.val().replace( /\s/g, '' ))
                    Message.sendMessage();
                else {
                    Message.message.val('');
                }
            });

            Message.initNote();

            $('#form_order_note').on('submit', function (event) {
                event.preventDefault();
                if(Message.note.html().replace( /[\s&nbsp;]/g, '' )) {
                    Message.prepareNote();
                }
                else {
                    Message.note.html('');
                }
            });

            setInterval(function () {
                if (Message.loaded) {
                    Message.loadMessages();
                    Message.loaded = false;
                }
            }, 10000);
        }
    };

    Message.init();

    jQuery(function($){
        $("#note").focusout(function(){
            var element = $(this);
            if (!element.text().trim().length) {
                element.empty();
            }
        });
    });

</script>
