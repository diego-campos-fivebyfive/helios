{% extends view('layout') %}

{% block body %}
    <style>
        .btn-actions a {
            padding: 4px;
        }
        .icon-catalog {
            color: black;
        }
        .scroll {
            height: 300px;
            overflow-y: scroll;
        }
    </style>
    <div class="modal inmodal fade" id="modal_component" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-body">
                    {% include view('kit.spinner') %}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">
                        {{ 'Close'|trans }}
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
        <div class="col-md-12">
            {#TODO: Gerador ficar√° neste bloco#}
            <div class="ibox float-e-margins">
                <div class="ibox-title">Gerador</div>
                <div class="ibox-content">
                    <div class="panel-body">
                        <div id="generator_list_form" class="col-md-12 flow-h ladda">
                            {% include view('helper.spinner') %}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content scroll" id="content-list">
                    <div class="panel-body" id="catalog-list">
                    </div>
                </div>
            </div>
        </div>
        </div>
    </div>

{% endblock %}
{% block scripts %}
    {% include view('helper.request') %}
    {% include view('helper.plugins_js') %}

    <script>
        GeneratorHandler = {
            count: 0,
            stage: 'start',
            project: {id: 0, power: 0},
            editProject: false,
            getProject: function () {
                return this.project;
            },
            getForm: function () {
                var id = this.getProject().id;
                Request.send({
                    url: '{{ path('generator',{project:'_id_'}) }}'.replace(/_id_/g, id),
                    data: {source: 2},
                    callback: function (xhr) {
                        $('#generator_list_form').html(xhr.responseText);
                        FormGenerator.field('source').find('option[value="power"]').attr('selected', 'selected').trigger('change');
                        editProject = false;
                        GeneratorHandler.getConfig(editProject);
                    }
                });
            },
            getConfig: function (ediProject) {
              $.ajax({
                  url: '{{ path('catalog_config') }}',
                  complete: function (xhr) {
                      $('#pre-form-area').removeClass('hide');
                      $('#pre-form-area').html(xhr.responseText);

                      if (ediProject == true) {
                          $('#quantity').attr('disabled', 'disabled');
                      }
                  }
              });
            },
            getCatalog: function () {
              $.ajax({
                  url: '{{ path('catalog_list') }}',
                  complete: function (xhr) {
                      $('#catalog-list').html(xhr.responseText);
                  }
              });
            },
            onPreProcess: function () {
              if (this.stage == 'start') {
                  this.count = $('#quantity').val();
                  this.stage = 'cycle';
              }
            },
            onSaveProject: function () {
                this.count -= 1;
                if (this.count > 0) {
                    FormGenerator.form.trigger('submit');
                }
                else {
                    this.stage = 'start';
                    this.count = 0;
                    this.getForm();
                    this.getCatalog();
                }
            },
            init: function () {
                this.getForm();
                this.getCatalog();
            }
        };

        GeneratorHandler.init();

        var modal_component = $('#modal_component');
        var modal_body = modal_component.find('.modal-body');

        modal_component.on('show.bs.modal', function(event){
            var target = $(event.relatedTarget);
            var url = target.data('url');
            Request.send({
                url: url,
                callback: function(xhr){
                    modal_body.html(xhr.responseText);
                }
            });
        });


    </script>
{% endblock %}
