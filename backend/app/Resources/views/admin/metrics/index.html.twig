{% extends view('layout') %}

{% block body %}
{% verbatim %}

  <script src="https://unpkg.com/vue"></script>

  <style>
    .metric-panel {
      width: 50%;
      height: 420px;
      overflow: hidden;
    }
    .metric-progress-info {
      margin-left: 10px;
    }
    .milestone:hover {
      cursor: pointer;
    }
  </style>

  <div id="metric-milestones">
    <div class="modal inmodal" ref="vuemodal" id="milestoneModal" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
          <h2 class="text-center">{{ modalData.milestone }}</h2>
          <div class="modal-body ibox-title">
            <ul>
              <li v-for="issue in modalData.issues">
                <h4 class="">
                  {{ issue.title }}
                </h4>
              </li>
            </ul>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal">
              Fechar
            </button>
          </div>
        </div>
      </div>
    </div>

    <div class="wrapper wrapper-content animated fadeInRight">
      <div class="row" style="min-height: 100vh">
        <div class="ibox metric-panel">
          <div class="ibox-title">
            <h2>Progresso de tarefas técnicas</h2>
            <i>Github - Milestones</i>
          </div>
          <div class="ibox-content">
            <div class="tab-content">
              <div class="tab-pane active">
                <table class="table table-striped table-hover">
                  <thead>
                    <tr>
                      <th class="col-md-4">Título</th>
                      <th class="col-md-6 text-right">
                        Concluídas / Cadastradas (%)
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr class="milestone"
                      v-for="milestone in milestones" @click="getIssues(milestone)"
                      data-toggle="modal" data-target="#milestoneModal">
                      <td>{{ milestone.title }}</td>
                      <td class="text-right">
                        <progress-bar :data="milestone.average"></progress-bar>
                        <span class="metric-progress-info">
                          <b>{{ milestone.closed }}</b>/<b>{{ milestone.total }}</b>
                          Tarefas
                        </span>
                        <span class="metric-progress-info">
                          <b>{{ milestone.average }}%</b>
                          Concluído
                        </span>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    Vue.component('progress-bar', {
      props: ['data'],
      data: () => {
        return {
          container: {
            width: '100%',
            'background-color': '#eaecef',
            'border-radius': '3px',
            overflow: 'hidden',
            height: '9px',
            position: 'relative',
            margin: '5px'
          },
          bar: {
            'background-color': '#2cbe4e',
            position: 'absolute',
            height: '100%',
            right: 0,
            top: 0
          }
        }
      },
      template: `
        <div :style="container">
          <div :style="[bar, { width: data + '%' }]"></div>
        </div>`
    });

    const uri = 'http://localhost:8000/admin/metrics/api/v1';

    const vm = new Vue({
      el: '#metric-milestones',
      data: {
        milestones: [],
        modalData: {
            milestone: '',
            issues: []
        }
      },
      methods: {
        getIssues(milestone) {
          fetch(`${uri}/milestones/${milestone.id}/issues`)
            .then(response => response.json())
            .then(issues => {
              milestone['issues'] = issues
              this.modalData.milestone = milestone.title
              this.modalData.issues = issues
            })
          return milestone
        },
        clearModal() {
          this.modalData.milestone = ''
          this.modalData.issues = []
        }
      },
      mounted() {
        $(this.$refs.vuemodal).on("hidden.bs.modal", this.clearModal)
      }
    })

    fetch(`${uri}/milestones`)
      .then(response => response.json())
      .then(milestones => {
        vm.milestones = milestones
      })
  </script>
{% endverbatim %}
{% endblock %}
