{% set user = app.user %}
{% set member = user.info %}
{% set account = member.account %}

{% set startYear = account.createdAt|date('Y') %}
{% set currentYear = 'now'|date('Y') %}
{% set currentMonth = 'now'|date('m') %}

{% set months = {
'01':'Janeiro',
'02':'Fevereiro',
'03':'Março',
'04':'Abril',
'05':'Maio',
'06':'Junho',
'07':'Julho',
'08':'Agosto',
'09':'Setembro',
'10':'Outubro',
'11':'Novembro',
'12':'Dezembro'
} %}

{% set status = {
'1':'Pendente',
'2':'Validado',
'3':'Aprovado',
'4':'Rejeitado',
'5':'Confirmado',
'6':'Em Produção',
} %}

<style>
    .ibox-title > .col-md-4,
    .ibox-title > .col-md-2 {
        margin-top: -4px;
        /*padding-right: 0;*/
    }
    .ibox-title select {
        width: 33.3%;
        float: left;
        margin-top: -3px;
        text-align: center;
        border-color: #00A7EC;
    }
    option:hover,option:focus,option:active,option:checked {
        background-color: #00A7EC !important;
    }
    .btn-primary.btn-outline {
        background-color: white !important;
        border: solid 1px #00A7EC !important;
        color: #00A7EC;
        padding: 6px !important;
    }
    .btn-primary.btn-outline:hover {
        background-color: #00A7EC !important;
        border: solid 1px #00A7EC;
        color: white;
    }
    .btn-primary.btn-outline.select {
        border: solid 1px #00A7EC;
    }
    .btn-primary.active {
        background-color: #00A7EC !important;
        border-color: #00A7EC;
        color: white;
    }
    .sel {
        border-color: #00A7EC !important;
        border-radius: 4px;
    }
    .sel:focus {
        border-color: #00A7EC !important;
    }
    .chosen-choices {
        border-color: #00A7EC !important;
        border-radius: 4px;
        padding: 2px !important;
    }
    .sel-date {
        padding-left: 0;
        padding-right: 0;
    }

</style>

<div class="ibox float-e-margins">
    <div class="ibox-title">
        <div class="col-md-4">
            <h5> Histórico de orçamentos emitidos </h5>
        </div>
    </div>
    <div class="ibox-content">
        <div class="row">
            <div class="col-md-10">
                <div class="form-group">
                    <div class="col-md-8">
                        <select id="proposal-status" data-placeholder="Status" multiple class="form-control sel chosen-select">
                            {% for key, name in status %}
                                <option {{ key == status ? 'selected="selected"' }}
                                        value="{{ key }}"> {{ name }} </option>
                            {% endfor %}
                        </select>
                    </div>
                    <input id="proposal-group" value="" type="hidden">
                    <div class="col-md-2 sel-date">
                        <select id="proposal-month" class="form-control sel">
                            {% for key, name in months %}
                                <option {{ key == currentMonth ? 'selected="selected"' }}
                                        value="{{ key }}"> {{ name }} </option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="col-md-2 sel-date">
                        <select id="proposal-year" class="form-control sel">
                            {% for year in startYear..currentYear %}
                                <option {{ year == currentYear ? 'selected="selected"' }}
                                        value="{{ year }}"> {{ year }} </option>
                            {% endfor %}
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-2 btn-group" style="padding-left: 0;">
                <button data-group="month" class="btn btn-sm btn-outline btn-primary col-md-6">
                    Mês
                </button>
                <button data-group="year" class="btn btn-sm btn-outline btn-primary col-md-6">
                    Ano
                </button>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-9">
                <div class="flot-chart flow-h">
                    <div class="flot-chart-content flow-lg" id="proposals-chart"></div>
                </div>
            </div>
            <div class="col-lg-3">
                <ul class="stat-list">
                    <li>
                        <h2 class="no-margins" id="issued-proposals"></h2>
                        <small> Orçamentos emitidos </small>
                        <p> &nbsp; </p>
                    </li>
                    <li>
                        <h2 class="no-margins" id="amount-proposals"></h2>
                        <small> Valor dos orçamentos </small>
                        <p> &nbsp; </p>
                    </li>
                    <li>
                        <h2 class="no-margins" id="power-proposals"></h2>
                        <small> Potência dos orçamentos </small>
                        <p> &nbsp; </p>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<script>

    $(function () {

        var btnGroups = $('[data-group]');
        var btnMonth = $('[data-group="month"]');
        var btnYear = $('[data-group="year"]');
        var selectorStatus = $('#proposal-status');
        var selectorYear = $('#proposal-year');
        var selectorMonth = $('#proposal-month');
        var inputGroup = $('#proposal-group');
        var currentYear = '{{ currentYear }}';
        var currentMonth = '{{ currentMonth }}';

        function checkMonthSelector() {
            var year = selectorYear.val();
            $.each(selectorMonth.find('option'), function (i, o) {
                var option = $(o);
                if (parseInt(option.val()) > parseInt({{ currentMonth }}) && year == {{ currentYear }}) {
                    option.hide();
                } else {
                    option.show();
                }
            });
        }checkMonthSelector();

        function generateUrl(group, year, month, status) {
            return '{{ path('widget_orders',{group:'_group_', year:'_year_', month:'_month_', status:'_status_'})|raw }}'
                .replace(/_group_/g, group)
                .replace(/_status_/g, status)
                .replace(/_year_/g, year)
                .replace(/_month_/g, month);
        }

        function monthFormatter(v, axis) {
            var months = ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"];
            return months[parseInt(v) - 1];
        }

        function currencyFormatter(v, axis) {
            return formatCurrency(v);
        }

        function powerFormatter(v, axis) {
            return formatPower(v);
        }

        function intFormatter(v, axis){
            return parseInt(v);
        }

        function renderGraph(data){

            var isYear = ('year' == data.group);

            var chartData = [
                {
                    label: "Valor dos orçamentos",
                    data: data.amounts,
                    color: "#F2A019",
                    bars: {
                        show: true,
                        align: "center",
                        barWidth: 1, //24 * 60 * 60 * 600,
                        lineWidth: 1
                    }
                },
                {
                    label: "Quantidade de orçamentos",
                    data: data.counts,
                    color: "#00A7EC",
                    yaxis: 2,
                    lines: {
                        show: true
                    }
                }
            ];

            chartOptions = {
                xaxes: [{
                    tickSize: 1,
                    tickFormatter: isYear ? monthFormatter : intFormatter ,
                    min: isYear ? null : 1,
                    max: isYear ? null : data.options.last_day
                }],
                yaxes: [{
                    tickDecimals: 0,
                    position: "left",
                    tickFormatter: currencyFormatter,
                    max: data.amountMax
                }, {
                    tickDecimals: 0,
                    position: "right"
                }],
                legend: {
                    noColumns: 1,
                    labelBoxBorderColor: "#333",
                    position: "sw",
                    margin: [0, -55]
                },
                grid: {
                    hoverable: true,
                    borderWidth: 0
                },
                tooltip: true,
                tooltipOpts: {
                    content: isYear ? "Mês %x - %y" : "Dia %x - %y"
                }
            };

            $.plot($("#proposals-chart"), chartData, chartOptions);
        }

        function requestData() {

            var status = selectorStatus.val();
            var year = selectorYear.val();
            var month = selectorMonth.val();
            var group = inputGroup.val();

            var issuedProposals = 0;
            var amountProposals = 0;
            var powerProposals  = 0;

            $.ajax({
                url: generateUrl(group, year, month, status),
                complete: function (xhr) {

                    var response = xhr.responseJSON;
                    var data = response.data;
                    var status = response.status;
                    var options = response.options;

                    var amounts = [];
                    var powers = [];
                    var counts = [];
                    var amountMax = 0;

                    $.each(data, function (i, group) {

                        amounts[amounts.length] = [i, group.amount];
                        powers[powers.length] = [i, group.power];
                        counts[counts.length] = [i, group.count];

                        if (group.amount > amountMax) {
                            amountMax = group.amount;
                        }

                        issuedProposals += group.count;
                        amountProposals += group.amount;
                        powerProposals += group.power;
                    });

                    renderGraph({
                        group: group,
                        status: status,
                        year: year,
                        month: month,
                        amounts: amounts,
                        powers: powers,
                        counts: counts,
                        options: response.options,
                        amountMax: amountMax
                    });

                    $('#issued-proposals').html(issuedProposals);
                    $('#amount-proposals').html(currencyFormatter(amountProposals));
                    $('#power-proposals').html(powerFormatter(powerProposals));
                }
            });
        }

        btnGroups.on('click', function () {
            var group = $(this).data('group');
            if ('year' == group) {
                selectorMonth.hide();
                btnMonth.removeClass('active');
                btnYear.addClass('active');
            } else {
                selectorMonth.show();
                btnYear.removeClass('active');
                btnMonth.addClass('active');
            }
            inputGroup.val(group);
            requestData();
        });

        btnMonth.trigger('click');

        $('#proposal-year, #proposal-month, #proposal-status').on('change', function () {
            checkMonthSelector();
            requestData();
        });

        $('#proposal-status').chosen({});

    });

</script>
