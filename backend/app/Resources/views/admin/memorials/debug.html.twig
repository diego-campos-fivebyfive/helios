{% extends view('layout') %}

{% block body %}

    <style>
        table th, table td, table input:not(:disabled) {
            text-align: center;
        }

        .input-markup, .input-price {
            width: 100px;
        }

        .table th span {
            /*background: #068;*/
            width: 75%;
            margin: 0;
            float: left;
        }

        .table th a {
            text-align: right;
            width: 25%;
            margin: 0;
            float: left;
        }
        .product-config td input:disabled{
            font-size: 13px;
        }
        .input-description:not(.collapsed){
            width: 350px;
        }
        .input-description.collapsed{
            width: 85px;
        }
        .input-code:not(.collapsed){
            width: 120px;
        }
        .input-code.collapsed{
            width: 75px;
         }
    </style>

    <div class="row">

        <div class="col-md-12">
            SELECTORS
        </div>

        <div class="col-md-12">
            HEADER
        </div>

        {% for type, config in collection.components %}

            <div class="col-md-12" data-type="{{ type }}">
                <div class="row">
                    <div class="col-md-6">

                        <table class="table table-bordered">

                            <tr>
                                <th>
                                    <span> Código </span>
                                    <a class="resize" data-input=".input-code">
                                        <i class="fa fa-arrow-left"></i>
                                    </a>
                                </th>
                                <th>
                                    <span> Descrição </span>
                                    <a class="resize" data-input=".input-description">
                                        <i class="fa fa-arrow-left"></i>
                                    </a>
                                </th>
                                <th> NCM</th>
                                <th colspan="2"> CMV</th>
                            </tr>

                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th> Protheus </th>
                                <th> Aplicado </th>
                            </tr>

                            <tbody class="product-config">

                            {% for item in config.items %}
                                {% set product = item.product %}

                                <tr>
                                    <td title="{{ product.code }}">
                                        <input disabled="disabled" placeholder="Valor"
                                               value="{{ product.code }}" class="form-control input-code">
                                    </td>
                                    <td title="{{ product.description }}">
                                        <input disabled="disabled" placeholder="Valor"
                                               value="{{ product.description }}" class="form-control input-description">
                                    </td>
                                    <td title="{{ product.ncm }}">
                                        <input data-product="{{ {id: product.id, type: type}|json_encode }}" data-field="ncm" placeholder="Valor" value="{{ product.ncm }}" class="form-control input-ncm">
                                    </td>
                                    <td title="{{ product.cmvProtheus }}">
                                        <input data-product="{{ {id: product.id, type: type}|json_encode }}" data-field="cmvProtheus" placeholder="Valor" value="{{ product.cmvProtheus }}" class="form-control input-cmvProtheus">
                                    </td>
                                    <td title="{{ product.cmvApplied }}">
                                        <input data-product="{{ {id: product.id, type: type}|json_encode }}" data-field="cmvApplied" placeholder="Valor" value="{{ product.cmvApplied }}" class="form-control input-cmvApplied" data-pricing="applied">
                                    </td>
                                </tr>

                            {% endfor %}

                            </tbody>

                        </table>

                    </div>
                    <div class="col-md-6">

                        <form id="form-{{ type }}">

                            <div style="width: 100%; overflow-y: auto;">
                                <table class="table table-bordered">

                                    <tr>
                                        {% for power in powers %}
                                            <th colspan="2"> {{ attribute(power, 0) ~ ' - ' ~ attribute(power, 1) }}
                                                kWp
                                            </th>
                                        {% endfor %}
                                    </tr>
                                    <tr>
                                        {% for power in powers %}
                                            <th> Markup</th>
                                            <th> Preço</th>
                                        {% endfor %}
                                    </tr>

                                    <tbody class="pricing-config">

                                    {% for item in config.items %}

                                        <tr>

                                            {% for range in item.ranges %}
                                                <td>
                                                    <input data-product="{{ item.product.id }}" data-field="markup" data-range="{{ range.id }}" placeholder="Markup" value="{{ range.markup }}"
                                                           class="form-control input-markup" data-pricing="markup">
                                                </td>
                                                <td>
                                                    <input data-product="{{ item.product.id }}" readonly="readonly" id="range_price_{{ range.id }}" data-price="{{ range.id }}" placeholder="Valor" value="{{ range.price }}"
                                                           class="form-control input-price" data-pricing="price">
                                                </td>
                                            {% endfor %}

                                        </tr>

                                    {% endfor %}

                                    </tbody>

                                </table>
                            </div>

                        </form>

                    </div>
                </div>
            </div>

        {% endfor %}

    </div>


{% endblock %}

{% block scripts %}

    <script>

        var RangeManager = {
            request: function(url, method, data, callback){
                $.ajax({
                    url: url,
                    method: method,
                    data: data,
                    complete: function(xhr){
                        callback(xhr);
                    }
                });
            },
            refresh: function (source) {

                var index = source.closest('tr').index();

                var data = [];

                if('markup' == source.data('pricing')){

                    var costs = $('[data-pricing="applied"]');

                    data[data.length] = {
                        id: source.data('range'),
                        markup: parseFloat(source.val()),
                        cost: parseFloat($(costs[index]).val())
                    };

                }else{

                    var cost = parseFloat(source.val());

                    if(isNaN(cost)) cost = 0;

                    var container = source.closest('[data-type]');
                    var config = container.find('.pricing-config');
                    var line = $(config.find('tr')[index]);
                    var inputMarkups = line.find('.input-markup');

                    $.each(inputMarkups, function (i, input) {
                        var range = $(input).data('range');
                        var markup = parseFloat($(input).val());

                        data[data.length] = {
                            id: range,
                            markup: markup,
                            cost: cost
                        };
                    });
                }

                if(data.length) {
                    $.ajax({
                        url: '{{ path('memorials_range_update') }}',
                        method: 'post',
                        data: {ranges: data},
                        complete: function (xhr) {
                            var response = xhr.responseJSON;
                            var ranges = response.ranges;
                            $.each(ranges, function (i, range) {
                                $('#range_price_' + range.id).val(range.price.toFixed(2));
                            });
                        }
                    });
                }
            },
            onChangeProduct: function(source){

                var field = source.data('field');
                var value = source.val();
                var product = source.data('product');

                var url = '{{ path('memorials_product_update') }}';

                this.request(url, 'post', {type: product.type, id: product.id, field: field, value: value}, function(xhr){
                    if(200 != xhr.status){
                        swal('Ooops', 'Falha ao executar a operação', 'error');
                    }else{
                        if('cmvApplied' == field){
                            RangeManager.refresh(source);
                        }
                    }
                });
            },
            init: function () {
            }
        };

        $('[data-field]').on('change', function(){
            var field = $(this).data('field');
            switch(field){
                case 'ncm':
                case 'cmvProtheus':
                case 'cmvApplied':
                    RangeManager.onChangeProduct($(this));
                    break;
                case 'markup':
                    RangeManager.refresh($(this));
                    break;
            }
        });

        $('a.resize').on('click', function(){
            var inputClass = $(this).data('input');
            var container = $(this).closest('table');
            var input = container.find(inputClass);
            var icon = $(this).find('i');
            var iconType = 'arrow';
            if(input.hasClass('collapsed')){
                input.removeClass('collapsed');
                icon.removeClass('fa-'+iconType+'-right').addClass('fa-'+iconType+'-left');
            }else{
                input.addClass('collapsed');
                icon.removeClass('fa-'+iconType+'-left').addClass('fa-'+iconType+'-right');
            }
        });

    </script>

{% endblock %}
