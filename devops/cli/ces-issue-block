#!/usr/bin/env bash

if [[ $1 == '--help' ]] || [[ $1 == '-h' ]]; then
  printf "ces-issue-block - help:
  Usage:
  ces-issue-block [ISSUE_NUMBER] \n
  Exemple:
  ces-issue-block 100 \n"
  exit 0;
fi

USER=$($CLI_PATH/util/github-credentials --user)
NICK=$($CLI_PATH/util/user-credentials $USER --slack)
LOGIN=$($CLI_PATH/util/github-credentials --login)

if [[ -z $1 ]]; then
  BRANCH=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
  ISSUE=${BRANCH/issue-/}
else
  BRANCH="issue-${1}"
  ISSUE=$1
fi


get_issue_description() {
  echo $(curl -s -X GET -u $LOGIN $GITHUB_REPOSITORY/issues/$ISSUE |
    grep -oP '(?<="body": ").*(?=",)')
}

get_block_observation() {
  local default='Issue bloqueada temporariamente para execução de issue de maior prioridade.'
  read -rep $'In portuguese, with few words, describe why this issue must be blocked and then press ENTER (Blank for default value).\n' observation > /dev/tty
  echo $([[ -z $observation ]] && echo $default || echo $observation)
}

observation="[$(date +'%d/%m/%y-%H:%M')] BLOCKED: $(get_block_observation)"
body="$(get_issue_description)\n\n${observation}"
json="{\"body\":\"${body}\"}"

curl -s -X PATCH -u $LOGIN -d "$json" $GITHUB_REPOSITORY/issues/$ISSUE > /dev/null

git push origin $BRANCH

$CLI_PATH/ces-issue-move $ISSUE --blocked

LOGS_CHANNEL=$($CLI_PATH/ces-issue-info $ISSUE --category-channel)
$CLI_PATH/ces-slack-notify "--${LOGS_CHANNEL}" "[$BRANCH] has been blocked by _${NICK}_"
