#!/usr/bin/env bash

cd $SICES_PATH

if [[ -z $1 ]] || [ $1 = '--help' ] || [ $1 = '-h' ]; then
  printf "ces-app-clone - help:

  Usage:

  ces-app-clone --AMBIENCE

  Exemple:

  ces-app-clone --production

  "
  exit 0;
fi

echo "Cloning $1 files..."

if [ $1 = '--homolog' ] || [ $1 = '--staging' ]; then

  git fetch origin
  GIT_WORK_TREE=$SICES_PATH git checkout -f
  git pull origin master -f

elif [ $1 = '--production' ]; then

  if [ -z ${2+x} ]; then
    origin='staging'
  else
    origin=${2/--/}
  fi

  source $CLI_PATH/config/$origin/variables

  path=$SICES_PATH

  echo "Creating current version Backup..."
  rsync -avzh --delete $path/** $path/.backup

  echo "Importing Temp files from $origin Server..."
  rsync -azvv --delete -e \
    "ssh -i $path/devops/aws/$origin.pem" admin@54.233.150.10:$path/** $path/.temp

  echo "Deploying files from Temp..."
  rsync -avzh --delete $path/.temp/** $path

  echo "Moving untracked files..."
  rsync -avzh $path/.backup/backend/web/uploads/** $path/backend/web/uploads
  rsync -avzh $path/.backup/backend/storage/** $path/backend/storage

  # Remove it after deploy command optimizations
  rm $path/devops/aws/$origin.pem
  cp $path/.backup/devops/aws/$origin.pem $path/devops/aws/$origin.pem
  rm $path/backend/app/config/parameters.yml
  cp $path/.backup/backend/app/config/parameters.yml $path/backend/app/config/parameters.yml
  # Finish Remove it

fi
