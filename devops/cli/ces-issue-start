#!/usr/bin/env bash

cd $SICES_PATH

if [[ -z $1 ]] || [ $1 = '--help' ] || [ $1 = '-h' ]; then
  printf "ces-issue-start - help:
  Usage:
  ces-issue-start [ISSUE_NUMBER] \n
  Exemple:
  ces-issue-start 100 \n"
  exit 0;
fi

LAST_BRANCH=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
LAST_ISSUE=${LAST_BRANCH/issue-/}
LAST_STAGE=$($CLI_PATH/ces-issue-info $LAST_ISSUE --stage)
LAST_MODIF=$(git log origin/master..HEAD)
STAGE=$($CLI_PATH/ces-issue-info $1 --stage)

USER=$($CLI_PATH/util/github-credentials --user)
NICK=$($CLI_PATH/util/user-credentials $USER --slack)

if [[ $LAST_STAGE == 'Review' ]]; then
  echo "Forbidden: You must stand $LAST_BRANCH reviews and merge to be able to start a new one."
  exit 0
fi

if [[ -n $(git diff) ]]; then
  echo 'Forbidden: Pleace, commit your modifications or discard they to be able to start a new issue.'
  exit 0
fi

if [[ $LAST_STAGE == 'In-progress' ]] && [[ -n $LAST_MODIF ]]; then
  $CLI_PATH/ces-issue-block $LAST_ISSUE
fi

# Branch Master
git checkout master
git fetch origin
git pull origin master

# Branch Issue
if [[ -n $(git branch | grep issue-$1) ]]; then
  git checkout issue-$1
  git pull origin master
else
  git checkout -b issue-$1
fi

if [[ $STAGE == 'Blocked' ]]; then
  git pull origin issue-$1
fi

if [[ $LAST_STAGE == 'In-progress' ]] && [[ -z $LAST_MODIF ]]; then
  read -p "You have not made any modifications. This script is going to delete local branch, move issue back to to-do column and unassign it. Do you agree? [Y/n]: " accept > /dev/tty

  if [[ $accept == 'y' ]]; then
    $CLI_PATH/ces-slack-notify --devops "[$LAST_BRANCH] _${NICK}_ undid and canceled his progress on this issue"
    $CLI_PATH/ces-issue-move $LAST_ISSUE --to-do
    $CLI_PATH/ces-issue-assign $LAST_ISSUE --unassign
    git branch -D $LAST_BRANCH
  else
    branch_current=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
    git checkout $LAST_BRANCH
    $CLI_PATH/ces-issue-block $LAST_ISSUE
    git checkout $branch_current
  fi
fi

$CLI_PATH/ces-app-install
$CLI_PATH/ces-database-update
$CLI_PATH/ces-log-clear

$CLI_PATH/ces-issue-assign $1
$CLI_PATH/ces-issue-move $1 --in-progress

if [[ $LAST_STAGE == 'Testing-tech' ]]; then
  read -p "Do you wanna $LAST_BRANCH to be tested by product team? [Y/n]: " accept > /dev/tty

  if [[ $accept == 'y' ]]; then
    $CLI_PATH/ces-issue-request --testing $LAST_ISSUE
    $CLI_PATH/ces-branch-clear $LAST_ISSUE
  else
    $CLI_PATH/ces-issue-close $LAST_ISSUE
  fi
fi

if [[ $LAST_STAGE == 'Testing-product' ]]; then
  $CLI_PATH/ces-issue-close $LAST_ISSUE
fi

if [[ $LAST_STAGE == 'Closed' ]]; then
  $CLI_PATH/ces-branch-clear $LAST_ISSUE
fi

> $CLI_PATH/stash/temp/.ces-pull-request

$CLI_PATH/ces-slack-notify --devops "[issue-$1] _${NICK}_ has been working on it"
$CLI_PATH/util/user-notify 'Branch created' "now on issue-$1"
echo "Everything done, now on Branch: issue-$1"
